java 各个 变量 都 存储 在哪 了 静态 变量 位于 方法 区 实例 变量 作为 对象 的 一部 分保 存在 堆 中 临时 变量 保存 于 栈 中 栈 随 线程 的 创建 而 被 分配 栈 内存 中 存放 局部变量 基本 数据类型 和 对象 引用 而 堆 内存 用于 存放 对象 实体 对于 字符串 而言 如果是 编译 期 已经 创 建好 直接 用 双引号 定义 的 的 就 存储 在 常量 池中 如果是 运 行期 new 出来 的 才能 确定 的 就 存储 在 堆 中 对于 equals 相等 的 字符串 在 常量 池中 永远 只有 一份 在 堆 中 可以 有 多 份 最后 借助 网上 看到 的 一个 例子 帮助 对 栈 内存 堆 内存 的 存储 进行 理解 intdintminty daydmonthmyeary 省略 getset 方法 stringargs testchange date inti i 对于 以上 这段 代码 date 为 局部变量 idmy 都是 形 参 为 局部变量 daymonthyear 为 成员 变量 下面 分析 一下 代码 执行 时候 的 变化 main 方法 开始 执行 intdatedate 局部变量 基础 类型 引用 和 值 都 存在 栈 中 testtestnewtest test 为 对象 引用 存在 栈 中 对象 newtest 存在 堆 中 testchange date 调用 change inti 方法 i 为 局部变量 引用 和 值 存在 栈 中 当 方法 change 执行 完成后 i 就会 从 栈 中 消失 调用 birthdate 类 的 构造 函数 生成 对象 d 为 对象 引用 存在 栈 中 对象 newbirthdate 存在 堆 中 其中 dmy 为 局部变量 存储 在 栈 中 且 它们 的 类型 为 基础 类型 因此 它们 的 数据 也 存储 在 栈 中 daymonthyear 为 birthdate 对象 的 的 成员 变量 它们 存储 在 堆 中 存储 的 newbirthdate 对象 里面 当 birthdate 构造 方法 执行 完 之后 dmy 将从 栈 中 消失 main 方法 执行 完 之后 date 变量 testd 引用 将从 栈 中 消失 newtest newbirthdate 将 等待 垃圾 回收 器 进行 回收 版权 声明 本文 为 csdn 博 主 的 原创 文章 遵循 ccbysa 版权 协议 转载 请 附上 原文 出处 链接 及 本 声明 原文 链接 