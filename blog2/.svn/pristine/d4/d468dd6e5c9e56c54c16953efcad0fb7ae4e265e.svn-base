一起 聊聊 3个 线程 依次 打印 1 2 3... 的 故事 戳 蓝字 topcoder 关注 我们 哦 个 线程 依次 打印 这个 问题 常 常被 作为 面试题 题目 如下 三个 线程 一个 线程 负责 打印 第二个 负责 打印 第三个 负责 打印 要求 在 控制 台中 按 顺序 输出 这个 题目 肯定是 要 启动 个 线程 的 那 怎么 让 这个 线程 协作 按 顺序 打印 呢 从 大 的 方面 来讲 这种 协作 可分为 以下 两种 竞争 型 每个 线程 都 抢着 去 打印 如果 发现 不该 自己 打印 则 准备 下一 轮 抢 由于 大家 都是 竞争 的 因此 需要用 锁 机制 来 保护 协 同型 当前 线程 线程 打印 之后 通知 下一个 线程 去 打印 这种 需要 确认 好 第一个 线程 打印 时机 由 于是 协 同型 的 因此 可以 不用 锁 机制 来 保护 但是 需要 一个 通知 机制 竞争 型 打印 多个 线程 竞争 型 打印 优势 是 代码 简单 易懂 劣势 是 线程 争抢 是 cpu 调度 进行 的 可能 该 某个 线程 打印 时 结果 该 线程 迟迟 未被 cpu 调度 结果 其他 线程 被 cpu 调度 到 但是 由于 不能 执行 打印 操作 而 继续 争抢 造成 cpu 性能 浪费 示例 代码 如下 这里 将 lock 对象 换成 lock reentrantlock 进行 lockunlock 也是 可以 的 intindex while currentltmax synchronized lock if currentltmax ampamp currentindex current stringargs newthread newdemotask newthread newdemotask newthread newdemotask threadstart for threadjoin 协 同型 打印 多个 线程 协 同型 打印 优势 是 各个 线程 使用 通知 机制 进行 协同 分工 理论上 执行 效率 较高 不过 要 使用 对应 的 通知 机制 关于 如何 通知 第一种 是 可 使用 java 对象 的 waitnotify 或者 conditon 对象 的 awaitsignal 第二种 是以 事件 或者 提交 任务 的 方式 比如 通过 提 交待 打印 数字 这个 任务 给 下一个 线程 下面 以 第二种 方式 进行 代码 分析 比如 当前 线程 通过 submit 给 下一个 线程 一个 待 打印 数字 的 任务 这样 很 容易 想到 使用 只 包含 个 线程 的 线程 池 来 实现 示例 代码 如下 主 线程 要 等待 线程 打印 完毕 使用 countdownlatch 通知 机制 if currentltmax current threadlistget submit newdemotask stringargs intiilti threadlistadd threadlistget submit newdemotask 推荐 阅读 数据 序列化 的 那些 事 kubernetespod 基础 概念 知多少 kubernetes 基础 概念 知多少 欢迎 小伙伴 关注 topcoder 阅读 更多 精彩 好文 