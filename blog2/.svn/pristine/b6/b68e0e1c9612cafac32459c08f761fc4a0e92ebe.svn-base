之 protostar-stack xprotostar 涉及 栈 溢出 堆 溢出 格式化 字符串 漏洞 网络 编程 及 综合性 漏洞 本文 将 介绍 stack 部分 关于 环境 准备 在 官 网 下载 即可 下载 后 得到 iso 镜像 使用 vmware 安装 然后 使用 useruser 即可 登录 查看 ip 知道 ip 后 可以 在 kali 中 ssh 连上 输入 user 即可 机器 上 所有 需要 分析 的 程序 都在 如下 路径 x 来看 第一关 stack 源码 如下 这 题 很简单 就是在 if 里 判断 modified 变量 是否 被 修改 而 题目 可以 让我们 合法 输入 的 只有 buffer 的 字节 不过 由于 使用 的 是 gets 可以 通过 溢出 字节 的 缓冲区 比如 字节 这样 个 字节 在 buffer 中 个 字节 在 modified 中 只要 其 值 不是 就可以 了 测试 如下 先 输入 个 字节 可以 会 tryagain 输入 字节 则 成功 修 改了 modified 的 初始值 如果 输入 更多 可能 还会 溢 出到 其他 空间 如 返回 地址 等 所以 容易 造成 程序 崩溃 比如 输入 个 x 第 二关 stack 源码 如下 从 源码 中 看出 这一关 在上 一关 基础上 不仅 要求 modified 被 修改 而且 明确 了 要 修 改为 x 这一关 虽然 使 用了 strcpy 但是 和 gets 一样 没有 校验 边界 所以 还是 可以 造成 溢出 可以 先 试试 输入 个 a 的 时候 是 刚 好把 buffer 填 满了 输入 个 a 时 多出 的 个 a 是 填 到了 modified 的 空 间中 这里 注意到 第 个 a 是 第一个 写到 modified 空间 的 modified 为 int 类型 共 四 字节 但是 从 打印 的 结果 中 看到 这个 a 却是 在 最后 的 位置 这是 由于 该 机器 采用 的 小 端 序 所以 既然 从 源码 中 看到 它 让我们 把 modified 填 为 x 即 abcd 所以 我们 在 输 入时 的 顺序 应该是 相反 的 即 dcba 即 如下 所示 x 第三关 stack 源码 如下 这是 在 stack 上 改进 的 主要有 两点 区别 第一点 这次 的 strcpy 是 将 variable 复制到 buffer 而 上 一关 是 argv 复制到 buffer 而 variable 来自 环境变量 第二 点这里 要求 将 modified 修 改为 xdada 而 xd 是 回车符 xa 是 换行符 我们 没办法 像 针对 x 一样 直接 输入 a 就可以 第一个 问题 我们 手动 设置 环境变量 就可以 第二个 问题 的话 对于 python 而言 如果 我们 输入 为 xd 这种 格式 的话 输出 也 自然 为 相应 的 进制 所以 如下 就可以 解决 该 问题 x 第四 关 stack 源码 如下 这里 的话 要求 我们 控制程序 执行 流 能够 调用 win 函数 很明显 这就 要求 我们 覆 写 eip 指针 首先 借助 objdump 找到 win 函数 在 内存 中 的 地址 这里 的 x 选项 是 让 objdump 列出 所有 函数 的 地址 配合 grep 只 列出 win 函数 的 地址 这里 可以 看到 地址 为 x 接下来 我们 就 需要用 fp 指向 该 地址 即可 由于 小 端 序 的 原因 所以 如下 所示 x 第 五关 stack 源码 如下 这一次 没有 任何 变量 可以 让我们 覆 写去 调用 win 函数 那么 我们 这次 要想 调用 win 函数 的话 就需要 覆 写 main 函数 的 返回 地址 eip 这个 地址 存在 栈 帧 的 最 开始 的 地方 接下来 就需要 知道 溢出 buffer 多少 字节 才能 覆 写 eip 这就 需要 一次次 尝试 在 传入 字节 的 时候 报 错了 可知 字节 之后 的 区域 就是 用于 覆 写 eip 的 接下来 还是 同样 的 方法 找到 win 函数 的 地址 最终 答案 如下 这里 报错 的 原因 是因为 原 返回 地址 被 我们 覆 写了 导致 程序 不能 正常 退出 x 第 关 stack 源码 如下 这次 要求 我们 直接 拿到 shell 直接 用 现成 的 作用 相当于 execvebinsh 基本 的 布局 还是 和 之前 的 一样 还是 需要 字节 字节 这 字节 是 要 覆 写 eip 的 内容 先 gdb 载入 可见 buffer 从 espx 开始 先 确定 是否能 控制 eipgdb 调试 输入 个 a 个 b 查看 寄存器 可以 看到 确实 可以 控制 这里有 一个 问题 就是 我们 不知道 espx 的 确切 地址 直接 使用 gdb 给出 的 地址 是 不 准确 的 从 之前 的 汇编 中 我们 看到 在 执行 过程中 我们 要 跳转 的 内存地址 实际 被 载 入了 eax 寄存器 中 所以 如果 我们 可以 定位 到 jmpeax 指令 的 位置 我们 就可以 将 eip 指向 该 位置 以 执行 我们 的 shellcode 找 这种 gadget 很简单 由于 protyostar 近乎 裸机 我们 用 python 开个 简单 的 http 服务 然后 将 stack 下到 kali 上 在 kali 中 如下 操作 下 载到 kali 后 使用 msfelfscan 来找 gadget 我们 将 bbbb 的 替 换为 xbf 当然 这里 要注意 小 端 格式 shellcode 不足 字节 所以 需要 补上 一些 字节 这里 用 a 补上 然后 进行 测试 发现 报错 我们 将其 写到 tmp 目 录下 某个 文件 中 然后 是 使用 gdb 调试 接下来 看看 报错 原因 经过 调试 可知 是 由于 shllcode 中 的 push 导致 在 栈 空 间中 写 入了 其他 内容 为此 我们 可以 使用 addxesp 再 开辟 一些 空间 其 对应 的 机器码 为 xxcx 所以 相应 地 payload 中 的 a 少 填充 个 如下 所示 x 第 关 stack 源码 如下 这里 多了 一个 限制 在上 图中 可以 看到 这里 将 返回 地址 进行了 校验 相比 于 上 一关 又 增加了 难度 gdb 载入 后 反汇编 getpath 函数 xaa 处 的 gets 用于 接收 我们 的 输入 xb 到 xc 的 指令 就是 用于 校验 返回 地址 如果 不等 则 跳到 xe 走到 xf 打 印出 gotpath 如果 相等 则 继续 走到 xd 打 印出 bzzzt 这里 来看 看 这个 与 的 操作 假设 跳到 一个 地址 xbfffff 相与 之后 可以 看到 只要 地址 以 bf 开始 经过 与 操作 后 都 会与 xbf 相等 继而 就会 打 印出 bzzzt 这 就是 这道 题目 给 的 限制 也就是说 无法 使 用在 栈 的 地址 因为 都 是以 xbf 开头 针对 这道 题目 我们 这里 使用 retlibc 技术 后面 可以 看到 是以 xb 开头 首先要 找到 偏移 将 python 脚本 生成 的 偏移 写到 tmpexp 然后 在 gdb 中 调试 x 分 别是 e 和 d 所以 可知 偏移 总 共为 bbbbccccdd 这样 就能 控制 eip 了 接下来 要 找到 libc 地址 gdb 查看 内存 分布 找到 system 系统 调用 地址 再 找到 字符串 binsh 的 地址 这里 的 a 是 扫描 整个 文件 tx 是 打印 出 进制 形式 的 偏移 所以 binsh 地址 为 xbexfbf 所以 exp 如下 运行 后 就拿 到了 shellx 第 八关 stack 源码 如下 和 stack 类似 这次 是 限制 我们 使用 xb 开始 的 地址 作为 返回 地址 也就是说 retlibc 的 方法 也 失效 了 如下 所示 这次 我们 绕过 的 方法 是 rettext 既然 我们 不能 跳到 栈 上 和 libc 地址 上 那么 这次 我们 跳到 程序 的 text 段 上 此处 放着 程序 的 汇编 代码 并且 利用 特殊 的 gadget 实现 目的 首先 还是 要 确定 偏移 以 控制 eip 这一步 和 stack 一样 偏移 还是 为 字节 接下来 就是 找 gadget 还是 同样 的 办法 先把 程序 传 输到 kali 上 在 protostar 上 在 kali 上 使用 msfelfscan 找 gadget 使用 哪一条 都可以 本质上 都是 一样 的 即 poppopret 所以 现在 我们 知道了 padding 为 aeip 为 xcpop 随意 pop 随意 ret 我们 希望 返回 的 地址 这里 还是 与 stack 一样 用 system 调用 binsh 相关 的 地址 还是 同样 的 做法 就可以 找到 这里 不再 重复 源码 如下 测试 如下 x 参考 