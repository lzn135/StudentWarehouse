jvm04-jvm 中 内存 溢出 包括 内存 泄露 以 及其 处理 方法 文章 目录 前言 一些 基本 的 设置 说明 堆 内存 溢出 java 栈 内存 异常 方法 区 和 运行时 常量 池 溢出 直接 内存 溢出 内存 泄露 内存 泄露 的 定义 解决办法 内存 溢出 的 原因 分析 线上 内存 溢出 的 处理 方法 总结 前言 上 一篇 我们 介绍 了 jvmjvm 垃圾 收集 机制 的 一些 基本概念 这一 篇 介绍 一下 jvm 中 各种 内存 溢出 包括 内存 泄露 及其 处理 方法 本文 会 按照 jvm 中 内存 划 分来 介绍 各种 内存 溢出 的 例子 一些 基本 的 设置 说明 为了 模 拟出 内存 溢出 的 效果 我们 需要 手动 设置 内存 区域 的 内存大小 下面 就是 设置 值 部分 设置 值 及其 说明 分类 选项 说明 虚拟机 栈 xss 每个 线程 的 栈 大 小堆 空间 xms 启动 jvm 时 的 初始 堆 大 小堆 空间 xmx 堆 空间 最大值 堆 空间 xmn 新生代 大小 orlator 注意 此处 的 大小 是 与 jmapheap 中 显示 的 newgen 是 不同 的 整个 堆 大小 年轻 代 大小 年老 代 大小 持久 代 大小 增大 年轻 代 后 将会 减小 年老 代 大小 此 值 对 系统 性能 影响 较大 sun 官方 推荐 配置 为 整个 堆 的 新生代 空间 xxnewratio 新生 代与 老 年代 的 比例 新生代 空间 xxnewsize 新生代 大小 新生代 空间 区域 survivorration 区 的 比例 永久 代 空间 xxpermsize 启动 jvm 时 的 初始 永久 代 大小 永久 代 空间 xxmaxpermsize 永久 代 空间 最大值 元 空间 xxmetaspacesize 指定 元 空间 的 初始 空间 大小 以 字节 为 单位 达到 该 值 就会 触发 垃圾 收集 进行 类型 卸载 同时 收集器 会对 该 值 进行 调整 如果 释 放了 大量 的 空间 就 适当 降低 该 值 如果 释 放了 很少 的 空间 那么 在 不 超过 的 情况下 适当 提高 该 值 元 空间 设置 元 空间 最大值 默认 是 即 不 限制 或者说 只 受限于 本地 内存大小 元 空间 在 垃圾 收集 之后 控制 最小 的 元 空间 剩余 容量 的 百分比 可 减少 因为 元 空间 不足 导致 的 垃圾 收集 的 频率 直接 内存 设置 直接 内存 的 最大 大小 如果 不 设置 的话 则 默认 与 java 堆 最大值 由 xmx 指定 一致 一个 项目 的 启动 设置 堆 内存 溢出 java 堆 用于 存储 对象 的 实例 我们 只要 不断地 创建 对象 并且 保证 gcroots 到 对象 之间 有 可达 路径 来 避免 垃圾 回收 机制 清除 这些 对象 那么 随着 对象 数量 的 增 加总 容量 触及 最 大堆 的 容量 限制 后 就会 产生 内存 溢出 java 堆 内存 的 异 常是 实际 应用 中最 常见 的 内存 溢出 异常情况 出现 java 堆 内存 溢出 时 异常 堆栈 信息 会 跟随 进一步 提示 javaheapspace 下面 举个 例 子来 模拟 堆 内存 溢出 这里 将 xms 和 xmx 都 设置成 m 保证 了 java 堆 内存 不可 扩展 然后 通过 xxheapdumppath 指定 dump 文件 的 保存 位置 这里 通过 while 循环不断 的 创建 对象 然后 保 存到 集合 中 java 堆 内存 异常 vmargs 这两个 参数 保证 了 堆 中 的 可 分配 内存 固 定为 自动 生成 dump 文件 文件 生成 的 位置 作为 生成 在 桌面 的 一个 目录 创建 一个 内 部类 用于 创建 对象 使用 stringargs 无限 的 创建 对象 放在 堆 中 while true listadd newoomobject 下面 简单 的 说 一 下在 idea 中 设置 应用 运行 内存 的 方法 我们 只需 要在 找到 需要 设置 的 主 类 然后 在 vmoptions 中 添加 如 下图 所示 上面 程序 运行 结果 如下 heapoomjava javahotspot tm k k 我们 可以 看到 程序 生 成了 dump 文件 到 指定 目录 打开 jvisualvmexe 工具 导入 heapdump 文件 相应 的 说明 如 下图 所示 一 共创 建了 个 实例 消耗 了 的 运行 内存 切 换到 实 例数 如 下图 所示 如何 解决 堆 内存 的 oom 异常 呢 首先 需要 确认 内存 中 导致 oom 的 对象 是否 是 必要 的 也 就是 要 先 分 清楚 到底是 出现 了 内存 泄露 memoryleak 还是 内存 溢出 memoryoverflow java 栈 内存 异常 说 完了 java 堆 内存 异常 下面 我们 来 看看 java 栈 内存 异 常在 实际 开发 中 发生 栈 内存 异常 的 情况 比 较少 java 栈 内存 异常 发生 的 两种 情况 是 如果 线程 请求 的 栈 深度 栈 深度 指 目前 虚拟机 栈 中 没有 出 栈 的 方法 帧 大于 虚拟机 所 允许 的 最大 深度 将 抛出 异常 这种 情况 在 递归 的 场景 下 可能会 出现 如果在 使用 递归 算法 时 没有 控制 好 递归 的 跳出 条件 就有 可能会 出现 这种 情况下 面的 例子 就是 一个 没有 跳出 条件 的 递归 调用 根据 前面 说明 我们 可以 通过 xssk 设置 栈容量 为 k 如果 虚拟机 的 栈 内存 允许 动态 扩展 当 扩展 容量 无法 申请到 足够 的 内存 时 将 抛出 异常 如下 这个 例子 vmargs 设置 栈容量 为 k 默认 栈 的 深度 是 stacklength 递归 调用 stackleak stringargs tryoomstackleak catch exceptione throwe 运行 结果 如下 栈 的 深度 是 utfjava 可以 看到 递归 调 用了 次 栈容量 不够 用了 默认 的 栈容量 在 正常 的 方法 调 用时 栈 深度 可以 达到 深度 所以 一般 的 递归 可以 承受 的 住 如果 代码 中 出现 了 首先 需要 检查 代码 看看 是不是 递归 写 的 不对 不能 只是 调 参数 当 创建 很多 线程 时 容易 出现 这时 可以 通过 具体情况 减少 最 大堆 容量 或者 栈容量 来 解决问题 线程 数 最大 栈容量 最 大堆 值 其他 内存 忽略不计 或者 一般 不改 动 机器 最大 内存 当 线程 数 比较 多时 且 无法 通过 业务 上 减少 线程 数 再不 换 机器 的 情况下 我们 只 能把 最大 栈容量 设置 小一 点 或者 把 最 大堆 值 设置 小一 点 方法 区 和 运行时 常量 池 溢出 由于 运行时 常量 池 是 方法 区 的 一部分 所以 这两个 区域 的 溢出 测试 可以 放在 一起 进行 需要 注意 的 是 hotspot 从 jdk 开始 逐步 去 永久 代 的 计划 并在 jdk 中 完全 使用 元 空间 代替 永久 代 使用 永久 代 还是 元 空间 来 实现 方法 区 对 程序 的 影响 是 不同 的 元 空间 与 永久 代 之间 最大 的 区别 在于 元 空间 并不在 虚拟机 中 而是 使用 本地 内存 因此 默认 情况 下元 空间 的 大小 仅 受 本地 内存 限制 但 仍 可以 通过 参数 控制 xxmetaspacesize 与 来 控制 大小 方法 区 溢出 也是 一种 常见 的 内存 溢出 异常 一个 类 如果 要被 垃圾 收集器 回收 要 达成 的 条件 是 比较 苛刻 的 在 经常 运行时 生成 大量 动态 类 的 应用 场景 里 就应该 特别 关注 这些 类 的 回收 状况 这类 场景 除了 之前 提到 的 程序 使 用了 cglib 字节 码 增强 和 动态 语 言外 常见 的 还有 大量 jsp 或 动态 产生 jsp 文件 的 应用 jsp 第一次 运行时 需要 编 译为 java 类 基于 osgi 的 应用 即使是 同一个 类 文件 被 不同 的 加载 器 加载 也 会被 视为 不同 的 类 方法 区 的 主要职责 是 用于 存放 类型 的 相关 信息 如 类 名 访问 修饰符 常量 池 字段 描述 方法 描述 等 对于 这部 分 区域 的 测试 基本 的 思路 是 运行时 产生 大量 的 类 去 填满 方法 区 直到 溢出 为止 这是 因为 在 调用 cglib 创建 代理 时会 生成 动态 代理 类 即 class 对象 到 metaspace 所以 while 一下 就出 异常 了 下面 这个 例子 就是 通过 设置 元 空间 大小 然后 通过 动态 代理 生成 大量 的 类 来 模拟 元 空间 内存 溢出 的 情况 在 jdk 下 测试 方法 区 所以 设置 了 metaspace 的 大小 为 固定 的 stringargs while true joomobjectclass false objobjects 无限 创建 动态 代理 生成 class 对象 enhancercreate 运行 结果 直接 内存 溢出 直接 内存 导致 的 内存 溢出 一个 明显 的 特征 是 在 heapdump 文件 中 不会 看见 有 什么 明显 的 异常情况 如果 发现 内存 溢出 之后 产生 的 dump 文件 很小 而 程序 中 又 直接 或者 间接 使 用了 directmemory 典型 的 的 间接 使用 就是 nio 那就 可以 考虑 重点 检查一下 直接 内存 方面 的 原因 了 直接 内存 溢出 的 举例 nativemethod 面试 总结 内存 泄露 内存 泄露 的 定义 内存 泄露 是 指 程序 在 申请 内存 时 无法 释放 已经 申请 的 内存空间 这就 造成了 内存 泄露 一次 内存 泄露 似乎 不会有 大 的 影响 但是 内存 泄露 堆积 的 后果 就是 内存 溢出 解决办法 资源性 对象 使 用完 之后 需要 手动 的 close 例如 输 入流 inputstream 等等 集合 容器 中 的 内存 泄露 我们 通常 把 一些 对象 加入到 集合 容器 中 例如 arraylist 中 当 我们 不需要 该 对象 时 该 对象 时 并没有 把 它 的 引用 从 集合 中 清理 掉 这样 这个 集合 就会 越来越大 如果 这个 集合 是 static 的话 那 情况 就 更加 严重 了 前面 的 heapoom 就是 这种 情况 最终 内存 溢出 使用 threalocal 时 当 thread 长时间 不 结束 存在 大量 废弃 的 threadlocal 而又 不再 添加 新 的 threadlocal 时会 发生 内存 泄露 内存 溢出 的 原因 分析 内存 中 加载 的 数据量 过于 庞大 如一 次 从 数据库 中 取出 过多 数据 集合 中有 对象 的 引用 使 用完 后 未 清空 产 生了 堆积 使得 jvm 不能 回收 代码 中 存在 死循环 或者 循环 产生 过多 重复 的 对象 实体 使用 的 第三方 的 软件 的 bug 启动 参数 内存 值 设定 的 过小 线上 内存 溢出 的 处理 方法 将 内存 对账 的 信息 dump 下来 使用 文件名 pid 将 内存 堆栈 的 信息 导入 visualvm 中 进行 分析 总结 本文 首先 介绍 了 堆 内存 溢出 发生 的 场景 以及 处理方式 发生 的 场景 主要 就是 系统 创 建了 大量 的 对象 并且 这些 对 象是 有效 的 即 保证 gcroots 到 对象 之间 有 可达 路径 然后 介绍 了 栈 内存 异常 的 发生 场景 以及 处理方式 发生 的 场景 主 要是 线程 调用 栈 深度 超 过了 虚拟机 运行 的 栈 深度 最后 介绍 了 方法 区 的 内存 溢出 需要 注意 的 是 jdk 中 完全 移 除了 永久 代 取而代之 的 是 元 空间 