jvm 笔记 性能 监控 与 分析 工具 概述 前面 几篇 文章 分析 了 jvm 的 一些 概念 大部分 都是 偏 理论 的 本文 介绍 一些 可以 实 操 的 jvm 性能 监控 与 分析 工具 主要 包括 jdk 自带 的 一些 常用工具 以及 阿里 开源 的 java 诊断 工具 arthas 性能 监控 与 故障 处理 工具 jdk 自带 工具 jdk 自带 的 几个 常用工具 如下 名称 主要 作用 显示 指定 系统 内 所有 的 hotspot 虚拟机 进程 用于 收集 hotspot 虚拟机 各方 面的 运行 数据 显示 虚拟机 配置 信息 生成 虚拟机 的 内存 转 储 快照 heapdump 文件 用于 分析 heapdump 文件 它会 建立 一个 httphtml 服务器 让 用户 可以 在 浏览器 上 查看 分析 结果 显示 虚拟机 的 线程 快照 这里 只是 少部分 其他 更多 命令 可以 参考 官方 文档 虚拟机 进程 状况 工具 命令 格式 虚拟机 统计 信息 监视 工具 命令 格式 示例 监控 堆 内存 信息 如图所示 参数 主 要是 新生代 老 年代 的 内存空间 占用 情况 以及 gc 的 次数 和 时间 说明 如下 官方 文档 示例 每隔 毫秒 打印 堆 内存 信息 打 印次 jstatgc 如图所示 示例 查看 类 加载 卸载 信息 配置 信息 工具 查看 jvm 启动 参数 值得注意 的 是 jdk 使用 该 命令 时会 抛出 如下 异常 tooljava tooljava jinfojava nativemethod methodjava jinfojava jinfojava nativemethod 查资料 说是 jvm 的 bug 链接 在 jdkb 修复 了 因此 这里 测试 该 命令 使 用了 jdk 版本 信息 如下 tm buildlts javahotspot tm bitservervm jstackjava 堆栈 跟踪 工具 jstack 命令 用于 生成 虚拟机 当前 时刻 的 线程 快照 一般 称为 threaddump 或 javacore 文件 线程 快照 就是 当前 虚拟 机内 每 一条 线程 正在 执行 的 方法 堆栈 的 集合 生成 堆栈 快照 的 主要 目的 是 定位 线程 出现 长时间 停顿 的 原因 如 线程 死锁 死循环 请求 外部 资源 导致 的 长时间 等待 等 都是 导致 线程 长时间 停顿 的 常见 原因 jstacklmore 如图所示 jmapjava 内存 映像 工具 查看 对象 信息 可以 使用 jmap 查看 内存 中 的 对象 数量 及 内存空间 占用 例如 导出 堆 转 储 快照 可以 在 对应 路径 下 看到 堆 转 储 快照 文件 dumphprof 导出来 之后 就 可以用 其它 工具 分析 快照 文件 了 jhat 堆 转 储 快照 分析 工具 分析 jmap 生成 的 快照 文件 命令 如下 启动 后 在 浏览器 打开 httplocalhost 可以 看到 如下 信息 实际 工作中 一般 不会 直接 使用 jhat 命令 来 分析 dump 文件 主要原因 一般 不会在 部署 应用程序 的 服务器 上 直接 分析 dump 文件 分析 工作 一般 比较 耗时 而且 消耗 硬件 资源 在其 他 机器 上进 行时 则没 必要 受到 命令行 工具 的 限制 jhat 分析 功能 相对 简陋 visualvm 等 更 工具 功能强大 堆 转 储 快照 分析 工具 jvisualvm 也是 jdk 自带 的 命令 虽然 后面 独立 发展 了 这两种 方式 都可以 使用 visualvm 链接 使用 visualvm 分析 上面 jmap 导出 的 堆栈 转 储 文件 导入 后 如下 概览 对象 信息 线程 信息 这个 工具 使用 起 来比 jhat 舒服 多了 jconsolejvm 性能 监控 使用 jconsole 命令 会 启动 一个 用户 界面 如下 可以 选择 本地 或者 远程 的 jvm 进程 进行 连接 本人 测试 连接 时 报错 描 述及 解决方案 详见 连接 成功 之后 如下 概览 死锁 检测 除了 上面 jdk 自带 的 工具 还有 个 很 好用 的 阿里 开源 的 arthasarthas 官方 文档 中 英 准备 代码 为了 演示 部分 功能 这里 准备 了 一些 简单 的 示例 代码 hello stringargs true newhello sayhello 代码 比较简单 这里 不再 赘述 启动 arthasarthas 其实是 一个 jar 包 下载 后 运行 启动 成功 后 arthas 会 检测 本地 jvm 进程 并列 出来 参见 上面 的 jps 命令 选择 前面 的 序号 就能 附着 到 对应 的 进程 这里 选择 然后 回车 这样 就 成功 附着 到了 该 进程 接下来 就可以 执行 各种 命令 来 分析 jvm 了 help 使用 help 命令 可以 看到 arthas 的 命令 概览 classdefinition 此外 还 可以 查看 每个 命令 的 用法 举例 命令 后面 加 help 例如 命令 可以 总览 jvm 状况 默认 秒 刷新 一次 jvmjvm 可以 查看 当前 jvm 的 运行时 信息 比如 机器 信息 jvm 版本 启动 参数 classpath 等 还有 类 加载 信息 编译 信息 垃圾 收集器 内存 相关 信息 以及 操作系统 信息 死锁 等 thread 线程 信息 线程 堆栈 scampsmsc 可以 查看 类 加载 信息 rowcnt costinmssm 可以 查看 类 的 方法 信息 ljavalangstring vaffect rowcnt costinmsjadjad 可 以对 类 进行 反编译 例如 反编译 上面 的 hello 类 结果 如下 hello affect rowcnt 就是 热 部署 通俗 来讲 就是 开着 飞机 换 引擎 比如 上述 代码 的 运行 结果是 每隔 秒 打印 一行 代码 如下 thellothello 在 不 停止 该 程序 的 情况下 可以 改变 输出 内容 吗 答案 是 肯定 的 怎么做 呢 首先在 本地 新建 一个 与 hellojava 内容 完全 一样 的 文件 名字 也 完全 一样 然后 修改 方法 内容 新 的 hellojava 文件 内容 如下 修 改了 方法 输出 内容 imhungry 然后 在 本地 执行 javac 将其 编 译为 class 文件 注意 该 文件 的 路径 为 然后 运行 redefine 命令 这时候 去 观察 输出 结果 神奇 的 事情 发 生了 注意 直到现在 原先 的 程序 还是 一直 运行 的 并没有 停下来 有 木 有 开着 飞机 换 引擎 的 感觉 nubility 其他 还有 很多 命令 小伙伴 们 可以 自行 尝试 不知道 怎么 用 别忘了 help 小结 本文 主要 介绍 了 jdk 性能 分析 与 监测 的 一些 工具 主要 包括 jdk 自带 的 等 以及 很 好用 的 阿里 开源 工具 arthas 对于 这种 实 操 类 的 东西 当然 还是 要 多 动手 练 一练 咯 本文 内容 就到 这里 希望 对 大家 有所 帮助 