线程 池 如何 传递 线程 上下文 信息 戳 蓝字 topcoder 关注 我们 哦 业务 开发 中 一般 都会 使用 threadlocal 保存 一些 上下文 信息 但是在 线程 池中 执行 对应 逻辑 时 由 于是 不同 线程 所以 无法 获取 之前 线程 的 上下文 信息 线程 池 的 线程 上下文 传递 实现 方案 就是在 提交 任务 时 记录 当前 线程 上下文 信息 在 线程 池中 线程 执行 用户 任务 前 将 之前 保存 的 上下文 塞到 当前 线程 的 上下 文中 在 执行 用户 任务 之后 移除 该上 下文 即可 简单 来说 就是 外部 线程 提交 任务 时 要 记录 上下文 信息 内部 线程 执行任务 时 获取 之前 记录 的 上下文 信息 设置 到 当前 线程 上下 文中 实现 线程 上下文 传递 的 种 方式 一种 是 在 用户 任务 中 直接进行 手动 获取 设置 上下文 逻辑 另一种 是 实现 一个 自定义 的 线程 池 在 提交 任务 时 对 任务 进行 包装 并 保存 上下文 信息 然后 任务 执 行前 设置 上下文 信息 两种 实现 方式 的 代码 如下 stringargs contextset maincontext 方式 在 用户 任务 中 直接进行 手动 获取 设置 上下文 逻辑 executorsubmit newrunnablewrap 方式 自定义 线程 池 封 装成 支持 保存 设置 上下文 的 任务 super runnabletask if tasknull newrunnablewrap task null execute ftask runnabletask trycontextset contextvalue 用户 任务 逻辑 taskrun 关于 线程 间 上下文 传递 阿里 给 出了 一个 解决方案 是 一个 线程 间 传递 threadlocal 异步 执 行时 上下文 传递 的 解决方案 整个 库 的 核心 是 构 建在 类 继承 并 加强 类 之上 同时 包含 线程 池 修饰 以及 javaagent 支持 代码 小于 k 行 短小精悍 我们 都 知道 jdk 的 类 可以 完成 父 线程 到 子 线程 的 值 传递 但 对于 使用 线程 池 等 会 池 化 复用 线程 的 组件 的 情况 线程 由 线程 池 创 建好 并且 线程 是 池 化 起来 反复 使用 的 这时 父子 线程 关系 的 threadlocal 值 传递 已经 没有意义 应用 需要 的 实际上 是 把 任务 提 交给 线程 池 时 的 threadlocal 值 传递 到 任务 执 行时 原理 是 使用 包 装了 类 在 初始 化时 变量 在 run 方法 调用 runnablerun 前 进行 replay 设置 到 当前 线程 threadlocal 在 run 方法 调用 runnablerun 后 进行 restore 上下文 还原 也 就是 replay 的 反向 操作 注意 步骤 和 步骤 不是 在 同一个 线程 中 执行 的 这个 流程 和 本文 最初 说的 实现 方案 是 一致 的 ttl 的 示例 代码 如下 executorsubmit gt 先 进行 工作 线程 创建 使用 parentset 将 runnable 通过 ttlrunnable 包 装下 executorsubmit ttlrunnableget getname parentget 输出 结果 实现 原理 和 文章 开头 说的 实现 线程 上下文 传递 大致 一致 感兴趣 的 小伙伴 可以 直接 看下 ttl 源码 这里 不再 赘述 最后 关于 threadlocal 再 提 一下 我们 可以 重写 其 initialvalue 方法 这样 可以 在 threadlocalget 为 空 时 初始化 一个 值 使用 示例 如下 localget initlocalset helloworld localget localget init 推荐 阅读 你 的 threadlocal 线程 安全 么 java 并发 工具 那些 事儿 一起 聊 聊个 线程 依次 打印 的 故事 欢迎 小伙伴 关注 topcoder 阅读 更多 精彩 好文 