python 黑 帽 三 编程 实现 ip 及 端口 扫描器 实现 多线程 c 段 扫描器 python 黑 帽 第三 篇文章 将 分享 网络 扫描 基础知识 编程 实现 ip 及 端口 扫描器 实现 多线程 c 段 扫描器 本文 参考 了 python 绝技 书籍 和 i 春秋 ado 老师 的 课程内容 这里 真心 推荐 大家 去 学习 ichunqiu 课程 同时 也 结合 作者 的 编程 经验 进行 讲解 希望 这篇 基础 文章 对 您 有所 帮助 更 希望 大家 提高 安全意识 也 欢迎 大家 讨论 娜 璋 ai 安全 之家 于 年月日 开通 将 专注 于 python 和 安全 技术 主要 分享 web 渗透 系统安全 cve 复现 威胁 情报分析 人工智能 大数 据分析 恶意代码 检测 等 文章 真心 想把 自己 近十年 的 所学 所做 所 感 分享 出来 与 大家 一起 进步 声明 本人 坚决 反对 利用 教学方法 进行 恶意 攻击 的 行为 一切 错误 的 行为 必将 受到 严惩 绿色 网络 需要 我们 共同 维护 更 推荐 大家 了解 技术 背后 的 原理 更好 地 进行 安全 防护 虽然 作者 是 一名 安全 小白 但会 保证 每 一篇 文章 都会 很 用 心地 撰写 希望 这些 基础性 文章 对 你 有所 帮助 在 安全 路上 一起 前行 文章 目录 一 python 多线程 二 编程 实现 ping 扫描 三 检测 ip 存活 地址 四 编程 实现 端口 扫描器 五 多线程 queue 实现 c 段 扫描 一 python 多线程 进程 和 线程 进程 是 程序 的 一次 执行 每个 进程 都有 自己 的 地址 空间 内存 数据 栈 及其 他 记录 运行 轨迹 的 辅助 数据 线程 所有 的 线程 都 运 行在 同一个 进程 当中 共享 相同 的 运行 环境 线程 有 开始 顺序 执行 和 结束 三个 部分 由于 单线程 效率 低 程序 中 往往 要 引入 多线程 编程 计算机 的 核心 是 cpu 它 承担 了 所有 的 计算 任务 它 就像 一座 工厂 时刻 运行 着 假定 工厂 的 电力 有限 一次 只能 供给 一个 车间 使用 也就是说 一个 车间 开工 的 时候 其他 车间 都必须 停工 背后 的 含义 就是 单个 cpu 一次 只能 运行 一个 任务 进程 就 好比 工厂 的 车间 它 代表 cpu 所能 处理 的 单个 任务 任一 时刻 cpu 总是 运行 一个 进程 其他 进程 处于 非 运行 状态 一个 车 间里 可以 有 很多 工人 他们 协同 完成 一个 任务 线程 就 好比 车 间里 的 工人 一个 进程 可以 包括 多个 线程 thread 模块 pythonthread 模块 可以 调用 下述 函数 实现 多线程 开启 它将 产生 一个 新 线程 在 新 的 线程 中用 指定 的 参数 和 可选 的 kwargs 来 调用 这个 函数 startnewthread 注意 使用 这个 方法 时 一 定要 加 timesleep 函数 否则 每个 线程 都可 能不 执行 此 方法 还有 一个 缺点 遇到 较 复杂 的 问题 时 线程 数 不易控制 print 多线程 defmain fun 无 参数 fun timesleep print over 程序 成功 在 同一 时刻 运行 两个 函数 ifnamemainmain 输出 结果 如 下图 所示 threading 模块 thread 模块 存在 一些 缺点 尤其是 线程 数 不能 被 控制 下面 使用 threading 解决 线程 数 可 控制 的 问题 使用 threading 模块 子 类化 thread 类 key sysstdoutwrite hellossn keytimectime defmain threadskeysabc 线程 数 threadscountlen keys foriinrange threadscount targetfunargs keysi threadsappend t foriinrange threadscount threadsistart foriinrange threadscount threadsijoin ifnamemainmain 输出 结果 如 下图 所示 三个 线程 同时发生 多线程 threading 方法 能够 控制 线程 数 例如 想 写成 requests 模块 获取 网站 的 statuscode 状态 码 rrequestsget timestimetime timestartprint statussss hms sysstdoutwrite statussssn hms defmain threads 线程 数 网页 访问 次 threadscount targetfunargs threadsappend t foriinrange threadscount threadsistart foriinrange threadscount threadsijoin ifnamemainmain 输出 结果 如 下图 所示 二 编程 实现 ping 扫描 上述 代码 简单 讲 解了 thread 和 threading 模块 的 多线程 使用 但 实际 应用 中有 什么用 呢 我们 可以 通过 它对 所有 c 段 的 地址 进行 扫描 ping 探测 其 是否 存活 代码 如下 ipping 指定 次数 后 停止 ping 但 报错 访问 被 拒绝 选项 c 需要 具有 管理权限 checkpopen pingcnformat ip checkpopen pingnformat ip 数据 print datadecode gbk 程序 成功 在 同一 时刻 运行 两个 函数 如果 输入 的 ip 地址 为 本机 则 输出 正常 连通 结果 如下 所示 如果 输入 的 ip 地址 为 本机 则 提示 超时 如 下图 所示 接着 思考 如何 对 一个 c 段 网址 进行 ping 探测 呢 基本思路 是 设计 一个 循环 如果 主机 不存在 返回 的 是 timeout 如果 主机 存在 则 包含 ttl 字样 这里 以 ttl 为 判断 标准 从而 判断 存活 的 数据 ipcheckpopen pingnformat ip 数据 datadatadecode gbk 编码 转换 存活 print up 程序 成功 在 同一 时刻 运行 两个 函数 输出 结果 为 up 三 检测 ip 存活 地址 接下来 我们 尝试 检测 ichunqiu 网站 的 ip 地址 存活 情况 首先 调用 ping 命令 检测 该 网站 的 ip 地址 即 xxxx 该 部分 参考 i 春秋 ado 老师 再次 感谢 这里 将 pingcheck 函数 设置 一个 传递 参数 对应 ip 地址 对 它 进行 探测 通过 thread 线程 实现 ip 地址 存 活性 探测 能 探 测到 很多 存活 的 主机 ip checkpopen pingnformat ip 数据 datadatadecode gbk 编码 转换 存活 print sisupip 主 函数 ifnamemain 寻找 目标 ipxxstr i 多线程 方法 pingcheck ip timesleep 输出 结果 如 下图 所示 其中 ip 值 也 被 识别 出来 问 题在 多线程 编程 中 几个 线程 是 同时 启动 所以 输出 也是 输 出在 一行 那 怎么 才能 换行 输出 呢 这里 使用 系统 输出 解决 ip checkpopen pingnformat ip 数据 datadatadecode gbk 编码 转换 存活 sysstdoutwrite sisupnip 主 函数 ifnamemain 寻找 目标 ipxxstr i 多线程 方法 pingcheck ip timesleep 按 行 输出 结果 如 下图 所示 四 编程 实现 端口 扫描器 当 我们 拿到 某个 网站 通过 需要 扫描 它 开放 的 端口 比如 通过 在线 工具 tscan 扫描 结果 如 下图 所示 开 放了 等 端口 那 我们 是否能 通过 python 编写 代码 实现 呢 类似于 nmap 的 功能 方法 python 扫描 端口 可以 通过 socket 通讯 实现 通过 建立 tcp 套接 字 向 端口 发送 tcpsyn 数据包 并 等待 tcpack 相应 从而 确定 该 端口 是否 开放 完整 代码 连接 defconnscan tgthosttgtport tryconnsocket connconnect tgthosttgtport connsend violentpythonn resultsconnrecv print dtcpopentgtport print err 扫描 端口 defportscan tgthosttgtports tgthost print tgtip exceptprint tgtip print exceptprint 连接 端口 connscan tgthostint tgtport 主 函数 optparse 用于 处理 命令行 参数 defmain parseraddoption parseraddoption 解析 脚本 输入 的 参 数值 optionsargs parserparseargs optionstgtport split if tgthostnone or tgtportsnone print 端口扫描 portscan tgthosttgtports ifnamemainmain 该 代码 使 用了 optparse 参数 定义 包括 需要 扫描 的 host 和 需要 扫描 的 端口 运行 结果 如 下图 所示 成功 将 开放 的 端口 识别 出来 同样 我们 也 可以 简单 编写 上述 代码 自定义 ip 端口 序列 进行 扫描 扫描 端口 defgetipstatus ipport ipport print ipport ipport getipstatus hostport 输出 结果 如下 telnetlib 方法 接下来 我们 参考 dahlhin 大神 的 文章 补充 python 内置 模块 telnetlib 它 同样 可以 完成 端口 检测 任务 端口扫描 defgetipstatus ipport 创建 一个 telnet 对象 tryserveropen ipport 利用 telnet 对象 的 open 方法 进行 tcp 链接 print ipport ipport getipstatus hostport 输出 结果 同样是 端口 开放 我们 可以 扩大 扫描 的 范围 但 其 速度 非常 慢 多线程 扫描 引入 多线程 threading 模块 实现 多线程 扫描 此时 我们 仅 显示 开 放着 的 端口 端口 开发 检测 defgetipstatus ip forportinrange tryserveropen ipport print ipport ipport defcheckopen q getipstatus ip 主 函数 模拟 多 ip 地址 qqueuequeue foripinhostqput ip q tstart threadsappend t 五 多线程 queue 实现 c 段 扫描 虽然 threading 解决 了 线程 数 可控 问题 但是 面对 复杂问题 的 时候 比如 生产者 和 消费者 问题 仍然 不能 很好 地 解决 生产者 消费者 问题 和 queue 模块 queue 模块 qsize empty full put get 完美 搭配 queuethread 生产者 和 消费者 问题 生产者 生产 货物 将 货物 放到 队列 数据 中 生产者 在 生产 这些 货物 时 它 的 时间 是 不确定 的当 生 存着 将 货物 交给 消费者 消耗 的 时间 也是 不确定 的 由于 两个 时间 都不 确定 多线程 编程 存在 一定 问题 这里 引入 queue 模块 解决 该 问题 python 引 入库 为 queuepython 为 foriinrange queueput i print queueempty print queueqsize 取 数据 get 依次 取出 里面 的 数据 print queueget print queueget 输出 结果 如下 所示 生产者 利用 queue 将 所有 数据 货物 按 顺序 放入 queue 接着 消费者 依次 取出 queue 中 的 数据 接着 实现 c 段 扫描 定义 一个 类 传入 参数 queueclassdorun threadingthread definit selfqueue self self 非 空 取 数据 ipselfqueueget pingnformat ip datadatadecode gbk ipisupn defmain 放入 ip 地址 foriinrange qput str i foriinrange threadscount threadsappend dorun q ifnamemainmain 最终 输出 结果 如 下图 所示 通过 该 代码 可以 实现 检测 某 网站 ip 段 的 存活 情况 六 总结 希望 这篇 文章 对 你 有所 帮助 这是 python 黑 帽 第三篇 博客 编程 实现 了 ip 及 端口 扫描器 实现 多线程 c 段 扫描器 后续 作者 也 将 继续 深入 学习 制作 一些 常用 的 小工具 供 大家 交流 当然 你 也 可以 和 nmap 这类 工具 对比 但 python 有时候 能让 你 集成 更 强大 且 自由 的 工具 最后 真诚地 感谢您 关注 娜 璋 之家 公众 号 也 希望 我 的 文章 能 陪伴 你 成长 希望 在 技术 路上 不断 前行 文章 如果 对 你 有 帮助 有 感悟 就是 对 我 最好 的 回报 且看 且 珍惜 再次 感谢您 的 关注 也 请 帮忙 宣 传下 娜 璋 之家 哈哈 初来乍到 还请 多多指教 前文 python 黑 帽 一 获取 windows 主机 信息 注册表 u盘 历史 痕迹 和 回收站 文件 python 黑 帽 二 python 能做 什么 攻击 正则表达式 网络 爬虫 和 套接 字 通信 入门 想家 喽 o o by 娜 璋 ai 安全 之家 eastmount 夜 于 武汉 参考文献 安全 之路 web 渗透 技术 及 实战 案例 解析 陈 小兵 老师 python 绝技 运用 python 成为 顶级 黑客 connor 老师 