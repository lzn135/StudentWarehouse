秀 学妹 看见 都 惊呆 的 python 小 项目 界面 应用 项目 及 游戏 开发 目录 一 界面 应用 计算器 记事本 登录 和 注册 二 游戏 开发 贪吃蛇 俄罗斯方块 连连看 一 界面 应用 计算器 案例 介绍 本例 利用 python 开发 一个 可以 进行 简单 的 四则运算 的 图形化 计算器 会 用到 tkinter 图形 组件 进行 开发 主要 知识点 pythontkinter 界面 编程 计算器 逻辑运算 实现 本例 难度 为 初级 适合 具有 python 基础 和 tkinter 组件 编程 知识 的 用户 学习 设计 原理 要 制作 一个 计算器 首先 需要 知道 它 由 哪些 部分 组成 示意 如 下图 所示 从 结构 上 来说 一个 简单 的 图形界面 需 要由 界面 组件 组件 的 事件 监听器 响应 各类 事件 的 逻辑 和 具体 的 事件 处理 逻辑 组成 界面 实现 的 主要 工作 是 创建 各个 界面 组件 对象 对 其 进行 初始化 以及 控制 各 组件 之间 的 层次 关系 和 布局 示例 效果 示例 源码 object 界面 布局 方法 definit self 创建 主 界面 并且 保 存到 成员 属性 中 selfrootminsize selfrootmaxsize selfroottitle 计算器 设置 显 式 面板 的 变量 selfresultset 设置 一个 全局变量 运算 数字 和 f 符号 的 列表 selflists 添加 一个 用于 判断 是否 按 下 运算 符号 的 标志 界面 布局 selfmenus selflayout 计算器 菜单 界面 摆放 defmenus self 添加 菜单 创建 总 菜单 selfroot 添加 子 菜单 allmenutearoff 添加 选项卡 label 标准型 t label 科学 型 s label 程序员 p label 统计 信息 a 添加 分割线 添加 选项卡 label 历史记录 y label 数字 分组 i 添加 分割线 添加 选项卡 label 基本 b label 单位 转换 u label 日期 计算 d menutkintermenu filemenutearoff menuaddcommand label 抵押 m menuaddcommand label 汽车 租赁 v menuaddcommand label 油耗 mpg f menuaddcommand label 油耗 lkm u label 工作 表 w menumenu label 查看 v menufilemenu 添加 子 菜单 allmenutearoff 添加 选项卡 label 复制 c label 粘贴 v 添加 分割线 添加 选项卡 menutkintermenu filemenutearoff menuaddcommand label 复制 历史记录 i menuaddcommand label 编辑 e menuaddcommand label 取消 编辑 n menuaddcommand label 清除 l label 历史记录 h menumenu label 编辑 e menueditmenu 添加 子 菜单 allmenutearoff 添加 选项卡 label 查看 帮助 v 添加 分割线 添加 选项卡 label 关于 计算器 a label 帮助 h menuhelpmenu selfrootconfig menuallmenu 计算器 主 界面 摆放 deflayout self 显示屏 resultset 宋体 showlabelplace xywidthheight 功能 按钮 buttonmcplace xywidthheight 功能 按钮 buttonmrplace xywidthheight 功能 按钮 buttonmsplace xywidthheight 功能 按钮 buttonmjiaplace xywidthheight 功能 按钮 xywidthheight 功能 按钮 buttonzuoplace xywidthheight 功能 按钮 buttonceplace xywidthheight 功能 按钮 buttoncplace xywidthheight 功能 按钮 buttonzfplace xywidthheight 功能 按钮 buttonkpfplace xywidthheight 数字 按钮 buttonplace xywidthheight 数字 按钮 buttonplace xywidthheight 数字 按钮 buttonplace xywidthheight 功能 按钮 xywidthheight 功能 按钮 xywidthheight 数字 按钮 buttonplace xywidthheight 数字 按钮 buttonplace xywidthheight 数字 按钮 buttonplace xywidthheight 功能 按钮 xywidthheight 功能 按钮 xywidthheight 数字 按钮 buttonplace xywidthheight 数字 按钮 buttonplace xywidthheight 数字 按钮 buttonplace xywidthheight 功能 按钮 xywidthheight 功能 按钮 xywidthheight 数字 按钮 buttonplace xywidthheight 功能 按钮 xywidthheight 功能 按钮 buttonplusplace xywidthheight 计算器 菜单 功能 defmyfunc self 预留 接口 学成 之后 你 是不是 有 冲动 添加 该 功能 数字 方法 defpressnum selfnum 全局 化 变量 判断 是否 按 下了 运算 符号 重置 运算 符号 的 状态 获取 面板 中 的 原有 数字 判断 界面 数字 是否 为 num else 连 接上 新 按 下 的 数字 newnumoldnumnum 将 按 下 的 数字 写到 面板 中 selfresultset newnum 运算 函数 selfsign 保存 已经 按 下 的 数字 和 运算 符号 获取 界面 数字 selflistsappend num 保存 按 下 的 操作 符号 selflistsappend sign 设置 运算符 号为 按 下 状态 获取 运算 结果 defpressequal self 获取 所有 的 列表 中 的 内容 之前 的 数字 和 操作 获取 当前 界 面上 的 数字 将 当前 界面 的 数字 存入 列表 selflistsappend curnum 将 列表 转 化为 字符串 selflists 使用 eval 执行 字符串 中 的 运算 即可 endnumeval calculatestr 将 运算 结果 显示 在 界面 中 selfresultset str endnum 清空 运算 列表 selflistsclear 暂 未 开发 说明 defwait self 更新 中 按键 功能 defdeleone self ifselfresultget orselfresultget selfresultset selfresultget strnum 按键 功能 defzf self strnum strnum x 按键 功能 defds self dsnumint selfresultget selfresultset str dsnum 清空 运算 列表 selflistsclear c 按键 功能 defsweeppress self selflistsclear selfresultset 按键 功能 defkpf self strnumfloat selfresultget endnummathsqrt strnum ifstr endnum selfresultset str endnum str endnum 清空 运算 列表 selflistsclear 实例 化 对象 记事本 案例 介绍 tkinter 是 python 下 面向 tk 的 图形界面 接口 库 可以 方便地 进行 图形 界面设计 和 交互 操作 编程 tkinter 的 优点 是 简单 易用 与 python 的 结 合度 好 tkinter 在 pythonx 下 默认 集成 不需要 额外 的 安装 操作 不足之处 为 缺少 合适 的 可视化 界面设计 工具 需要 通过 代码 来 完成 窗口 设计 和 元素 布局 本例 采用 的 python 版本 为 如果 想在 pythonx 下 使用 tkinter 请先 进行 安装 需要 注意 的 是 不同 python 版本 下 的 tkinter 使用 方式 可能 略有不同 建议 采用 pythonx 版本 本例 难度 为 中级 适合 具有 python 基础 和 tkinter 组件 编程 知识 的 用户 学习 示例 效果 示例 源码 showinfo title 作者 messagepython defpower showinfo title 版权 信息 message 课堂练习 defmynew 未命名 文件 end defmyopen 记事本 ospathbasename filename textpaddelete end fopen filenamer textpadinsert fread fclose defmysave filenamew msgtextpadget end fwrite msg fclose exceptmysaveas defmysaveas initialfile 未命名 filenameffhopen fw msgtextpadget end fhwrite msg fhclose toptitle 记事本 ospathbasename f defcut ltltcutgtgt defcopy ltltcopygtgt defpaste ltltpastegtgt defundo ltltundogtgt defredo ltltredogtgt defselectall ltltcutgtgt textpadtagadd selend deffind ttoplevel top ttitle 查找 tgeometry x ttransient top label ttext 查找 grid vstringvar eentry egrid efocusset cintvar checkbutton ttext 不 区分 大小写 variablec grid button ttext 查找 所有 vget cget textpadte grid defclosesearch matchend tdestroy tprotocol defmypopup event defsearch matchend len needle textpadtagadd matchposlastpos efocusset ttitle str count 个 被 匹配 toptk toptitle 记事本 topgeometry x menubarmenu top 文件 功能 filemenumenu top label 新建 label 打开 label 保存 label 另存为 label 文件 menufilemenu 编辑 功能 editmenumenu top label 撤销 label 重做 label 剪切 label 复制 label 粘贴 label 查找 label 全选 label 编辑 menueditmenu 关于 功能 aboutmenumenu top label 作者 commandauthor label 版权 commandpower label 关于 menuaboutmenu shortcutbarpack expandnofillx inlabelabel inlabepack textpadtext topundotrue textpadpack scrollscrollbar textpad textpadconfig scrollconfig scrollpack siderightfilly 热键 绑定 textpadbind textpadbind textpadbind textpadbind textpadbind textpadbind textpadbind textpadbind textpadbind textpadbind textpadbind topmainloop 登录 和 注册 案例 介绍 本例 设计 一个 用户 登录 和 注册 模块 使用 tkinter 框架 构建 界面 主要 用到 画布 文本框 按钮 等 组件 涉及 知识点 pythontkinter 界面 编程 pickle 数据 存储 本例 实现 了 基本 的 用户 登录 和 注册 互动 界面 并 提供 用户 信息 存储 和 验证 pickle 是 python 语言 的 一个 标准 模块 安装 python 后 已 包含 pickle 库 不需要 单独 再 安装 pickle 模块 实现 了 基本 的 数据 序列化 和 反 序列化 通过 pickle 模块 的 序列化 操作 能够 将 程序 中 运行 的 对象 信息 保 存到 文件 中去 永久 存储 通过 pickle 模块 的 反 序列化 操作 能够 从 文件 中 创建 上 一次 程序 保存 的 对象 本例 难度 为 中级 适合 具有 python 基础 和 tkinter 组件 编程 知识 的 用户 学习 示例 效果 示例 源码 设置 窗口 最 开始 的 母体 窗口 windowtktk 建立 一个 窗口 windowtitle 欢迎 登录 windowgeometry x 窗口 大小 为 x 画布 canvastkcanvas 加载 图片 imimageopen imagespng im fileimagesgif canvaspack sidetop 两个 文字 标签 用户名 和 密码 两个 部分 tklabel windowtext 用户名 place xy tklabel windowtext 密码 place xy 讲 文本框 的 内容 定义 为 字符串 类型 varusrnameset amoxiangcom 设置 默认值 第一个 输入框 用来 输入 用户名 的 textvariable 获取 文本框 的 内容 xy 第二个 输入框 用来 输入 密码 的 xy defusrlogin trywithopen usrfile usrsinfousrfile title 欢迎光临 messageusrname 请 进入 个人 首页 查看 最新 资讯 message 错误 提示 密码 不对 请 重试 提示 你 还没有 注册 请先 注册 print issignup 注册 按钮 defusrsignup npnewpwdget nnnewnameget 上面 是 获取 数据 下面 是 查看 一下 是否 重复 注册 过 withopen usrfile 错误 提示 密码 和 确认 密码 必须 一样 错误 提示 用户名 早就 注册 了 欢迎 你 已经 成功 注册 了 点击 注册 之后 会 弹出 这个 窗口 界面 window 欢迎 注册 x 中间 是 x 而 不是 号 用户名 框 这里 输入 用户名 框 newnameset amoxiangcom 设置 的 是 默认值 tklabel 用户名 place xy xy 新密码 框 这里 输入 注册 时候 的 密码 tklabel 密码 place xy xy 密码 确认 框 tklabel 确认 密码 place xy xy 注册 xy 创建 注册 和 登录 按钮 windowtext 登录 commandusrlogin btnloginplace xy 用 place 来 处理 按钮 的 位置 信息 windowtext 注册 btnsignupplace xy windowmainloop 二 游戏 开发 游戏 简介 是 一款 比较 流行 的 数字 游戏 游戏规则 每次 可按 上下左右 方向键 滑动 数字 每 滑动 一次 所有 数字 都会 往 滑动 方向 靠拢 同时 在 空白 位置 随机 出现 一个 数字 相同 数字 在 靠拢 时会 相加 不断 叠加 最终 拼出 这个 数字 算 成功 最 早于 年月日 发行 原版 首先在 github 上 发布 原作者 是 gabrielecirulli 后 被 移植 到 各个 平台 本例 难度 为 初级 适合 具有 python 基础 和 pygame 编程 知识 的 用户 学习 设计 原理 这个 游戏 的 本质 是 二维 列表 就以 的 二位 列表 来 分析 关键 的 逻辑 以及 实现 二维 列表 如 下图 所有 的 操作 都是 对 这个 二维 列表 的 数据 的 操作 分为 上下左右 四个 方向 先说 向左 的 方向 如图 向左 操作 的 结果 如 下图 当 向左 的 方向 是 所有 的 数据 沿着 水平 方向 向左 跑 水平 说明 操作 的 是 二维 列表 的 一行 而 垂直 操作 的 则是 二位 列表 的 一列 这样 就可以 将 二维 列表 的 操作 变成 遍历 后 对 一维 列表 的 操作 向左 说明 数据 的 优先 考虑 的 位置 是 从 左 开始 的 这样 就 确定 了 一维 列表 的 遍历 开始 的 位置 上面 第 个 图 共 四行 每一个 行 都能 得到 一个 列表 这样一来 向左 的 方向 就 变成 从上到下 获得 每 一行 的 列表 方向 向左 参数 rowleft 其他 的 三个 方向 在 开始 的 时候 记住 是 怎样 获得 以为 列表 的 等 操作 完 才 放 回去 这样 就能 实现 了 示例 效果 示例 源码 地图 的 类 classmapdefinit selfsize size foriinrange size selfadd selfadd 新增 或有 概率 产生 defadd self ifselfmapint pselfsize int pselfsize xrandomrandint pselfsize int pselfsize 地图 向左 靠拢 其他 方向 的 靠拢 可以 通过 适当 旋转 实现 返回 地图 是否 更新 defadjust self bpop ltlt lastelsebappend v lastvb selfsizelen b foriinrange selfsize 逆时针 旋转 地图 度 defrotate self selfsize forrinreversed range selfsize 判断 游戏 结束 defover self forrinrange selfsize forcinrange selfsize selfsize forcinrange selfsize selfsize forcinrange selfsize self selfrotate ifselfadjust selfadd selfrotate selfrotate selfrotate defmoveright self selfrotate selfrotate ifselfadjust selfadd selfrotate selfrotate defmovedown self selfrotate selfrotate selfrotate ifselfadjust selfadd selfrotate defmoveleft self ifselfadjust selfadd 更新 屏幕 defshow map foriinrange size forjinrange size 背景 颜色 块 screenblit ij orblock ij pixeljpixeli 数值 显示 str mapmapij true textrectcenter screenblit maptexttextrect 分数 显示 screenblit scoreblock pixelsize mapover str mapscore true scorerectcenter screenblit mapmap size pygameinit pixelpixel foriinrange 设置 颜色 blockfill blockfill blockfill blockfill scoreblockfill 设置 字体 noneint pixel noneint scorepixel show map whilenotmapover 为 实验 参数 clocktick 接收 玩家 操作 show map 游戏 结束 pygametimedelay 贪吃蛇 案例 介绍 贪吃蛇 是 一款 经典 的 益智 游戏 简单 又 耐 玩 该游戏 通过 控制 蛇头 方向 吃 蛋 从而 使得 蛇 变得 越来 越长 通过 上下左右 方向键 控制 蛇 的 方向 寻找 吃 的 东西 每 吃 一口 就能 得到 一定 的 积分 而且 蛇 的 身子 会 越 吃 越长 身子 越长 玩 的 难度 就越 大 不能 碰 墙 不能 咬到 自己 的 身体 更 不能 咬 自己 的 尾巴 等 到了 一定 的 分数 就能 过关 然后 继续 玩 下一 关 本例 难度 为 中级 适合 具有 python 基础 和 pygame 编程 知识 的 用户 学习 设计 要点 游 戏是 基于 pygame 框架 制作 的 程序 核心 逻辑 如下 游戏 界面 分辨率 是 蛇 和 食物 都是 由 个 或 多个 像素 的 正方形 块儿 为了 方便 下文 用 点 表示 像素 的 正方形 块儿 组成 这样 共有 个 点 使用 pygamedrawrect 来 绘制 每一个 点 初始 化时 蛇 的 长度 是 食物 是 个 点 蛇 初始 的 移动 的 方向 是 右 用 一个 数组 代表 蛇 数组 的 每个 元素 是 蛇 每个 点 的 坐标 因此 数组 的 第一个 坐标 是 蛇 尾 最后 一个 坐标 是 蛇头 游戏 开始 后 根据 蛇 的 当前 移动 方向 将 蛇 运动 方向 的 前方 的 那个 点 append 到 蛇 数组 的 末位 再把 蛇 尾 去掉 蛇 的 坐标 数组 就 相当于 往前 挪 了 一位 如果 蛇 吃 到了 食物 即 蛇头 的 坐标 等于 食物 的 坐标 那么 在 第 点中 蛇 尾 就不 用 去掉 就 产 生了 蛇 长度 增加 的 效果 食物 被 吃掉 后 随机 在 空 的 位置 不 能与 蛇 的 身体 重合 再 生成 一个 通过 pygame 的 event 监控 按键 改变 蛇 的 方向 例如 当 蛇 向右 时下 一次 改变方向 只能 向上 或者 向下 当 蛇 撞上 自身 或 墙壁 游戏 结束 蛇头 装上 自身 那么 蛇 坐标 数 组里 就有 和 舌头 坐标 重复 的 数据 撞上 墙壁 则是 蛇头 坐标 超 过了 边界 都 很好 判断 其他 细节 做了 个 开始 的 欢迎 界面 食物 的 颜色 随机 生成 吃到 实物 的 时候 有 声音 提示 等 示例 效果 示例 源码 product repeat definit self selfmap xy forxinrange foryinrange self ifselfbodycount selfhead self movesright up down left self selfspeedlen selfbody iflen selfbody emptypos choice selfcolors pygameinit pygamemixerinit snakesnake eatwav eatwav simsunnsimsun 贪吃蛇 true simsunnsimsun 点击 开始 true 按 esc 退出 true 游戏 结束 true 蛇 很 长了 你 赢了 true 贪吃蛇 elif 在这里 赋值 而 不是 在 event 事件 的 循 环中 赋值 避免 按键 太快 snakemovehead snakebodyappend snakehead screensegseg pygamedrawrect screenblit gameoverwords snakesnake eliflen snakebody screenblit winwords snakesnake elsescreenblit welcomewords screenblit startgamewords screenblit closegamewords fpsclocktick snakespeed ifnamemainmain 俄罗斯方块 案例 介绍 俄罗斯方块 是 由 个 小方块 组成 不同 形状 的 板块 随机 从 屏幕 上方 落下 按 方向键 调整 板块 的 位置 和 方向 在 底部 拼出 完整 的 一行 或 几行 这些 完整 的 横条 会 消失 给 新 落下来 的 板块 腾出 空间 并 获得 分数 奖励 没有 被 消 除掉 的 方块 不断 堆积 一旦 堆 到 顶端 便 告 输 游戏 结束 本例 难度 为 高级 适合 具有 python 进阶 和 pygame 编程 技巧 的 用户 学习 设计 要点 边框 由 个 空格 组成 方块 就 落在 这 里面 盒子 组成 方块 的 其中 小方块 是 组成 方块 的 基本 单元 方块 从 边框 顶 掉下 的 东西 游戏 者 可以 翻转 和 改变 位置 每个 方块 由 个 盒子 组成 形状 不同 类型 的 方块 这里 形状 的 名字 被 叫做 tszjlio 如 下图 所示 模版 用 一个 列表 存放 形状 被 翻转 后 的 所有 可能 样式 全部 存放在 变量 里 变量 名字 如 sorj 着陆 当 一个 方块 到达 边框 的 底部 或 接触到 在其 他 的 盒子 话 就说 这个 方块 着陆 了 那样 的话 另一个 方块 就会 开始 下落 示例 效果 示例 源码 xffxffxff black linecolor xxx cubecolors xccxx xffxffx xxx xxx xffxccx xccxx xffxx xxx xffxffx xxx xccxffx xffxx 俄罗斯方块 gridnumheight 设置 游戏 的 根目录 为 当前 文件夹 file defshowtext fontnamesize texttruecolor textrectmidtop xy surfblit classcubeshape object shapesijlostzi j l o s t z self len selfshapes 骨牌 所在 的 行列 selfcenter gridnumwidth len len cubecolors selfcenternone selfcenter center 超出 屏幕 之外 说明 不合法 不为 none 说明 之前 已经有 小方块 存在 了 也 不合法 self selfcenter self center ifselfconflict center self center ifselfconflict center self center ifselfconflict center self pygamedrawrect screenselfcolor pygamedrawrect screenwhite defdrawgrids foriinrange gridnumwidth pygamedrawline screenlinecolor igridwidth foriinrange gridnumheight pygamedrawline screenlinecolor igridwidth widthigridwidth pygamedrawline screenwhite defdrawmatrix forirowinzip range gridnumheight forjcolorinzip range gridnumwidth row screencolor pygamedrawrect screenwhite defdrawscore showtext screenu 得分 format score widthsidewidth gridnumheight gridnumheight gridnumwidth screen showtext screenu 俄罗斯方块 widthheight showtext screenu 按 任意键 开始 游戏 widthheight fps level 是为了 方便 游戏 的 难度 level 越高 fpslevel 的 值 越小 这样 屏幕 刷新 的 就 越快 难度 就 越大 fpslevel down 表示 下移 骨牌 返回 false 表示 下移 不成功 可能 超 过了 屏幕 或者 和 之前 固定 的 小方块 冲突 了 iflivecubedown livecubecenter gridnumheight 消除 满 行 removefullline counter 更新 屏幕 screenfill black drawgrids drawmatrix drawscore screen 连连看 案例 介绍 连连 看是 一款 曾经 非常 流行 的 小游戏 游戏规则 点击 选中 两个 相同 的 方块 两个 选中 的 方块 之间 连接线 的 折 点 不 超过 两个 接线 由 x 轴 和 y 轴 的 平行线 组成 每 找出 一对 它们 就会 自动 消失 连线 不 能从 尚未 消失 的 图案 上 经 过把 所有 的 图案 全部 消除 即可 获得胜利 设计 思路 生成 成对 的 图片 元素 将 图片 元素 打乱 排布 定义 什么 才 算 相连 两张 图片 的 连线 不多于 跟 直线 或者说 转角 不 超过 个 实现 相连 判断 算法 消除 图片 元素 并 判断 是否 消除 完毕 示例 效果 示例 源码 点 类 definit selfxy selfxxselfyy 判断 选中 的 两个 方块 是否 可以 消除 defislink pp iflinecheck pp pp 一个 转 弯折 点 的 联通 方式 pp 两个 转 弯折 点 的 联通 方式 pp clickedatissame event 鼠标 左键 事件 代码 x eventx 换算 棋盘 坐标 y eventy print clickedatxy ifmapxyshowinfo title 提示 message 此处 无 方块 xy 画 选定 xy 处 的 框 线 xy 判断 第二次 点击 的 方块 是否 已被 第一次 点击 选取 如果是 则 返回 if pxpx and pypy return 画 选定 xy 处 的 框 线 print 第二次 点击 的 方块 xy print 第二次 点击 的 方块 cvpack 判断 是否 连通 ifissame pp andislink pp print 连通 xy 画 选中 方块 之间 连接线 drawlinkline pp cleartwoblock timesleep 定时 函数 tstart else 重新 选定 第一个 方块 清除 第一个 选定 框 线 cvdelete cvdelete print 清除 第一个 选定 框 线 xy 设置 重新 选定 第一个 方块 的 坐标 秒 defdelayrun cleartwoblock 清除 连线 及 方块 清除 连线 及 方块 延时 秒 timesleep 清除 第一个 选定 框 线 cvdelete 清除 第 个 选定 框 线 cvdelete 清空 记录 方块 的 值 mappxpycvdelete imagemappxpy mappxpycvdelete imagemappxpy 清除 选中 方块 之间 连接线 defdrawqipan 画 棋盘 foriinrange cvcreateline iiwidth foriinrange cvcreateline iiwidth cvpack defprintmap 输出 map 地图 width foryinrange height if mapxy imgimgsint mapxy idcvcreateimage xy imageimg foryinrange height forxinrange width print mapxyend print y 同 行同 列 情况 消除 方法 原理 如果 两个 相同 的 被 消除 元素 之间 的 空格 数 spacecount 等于 他们 的 行列 差 则 两者 可以 联通 消除 x 代 表列 y 代表 行 paramp 第一个 保存 上次 选 中点 坐标 的 点 对象 paramp 第二个 保存 上次 选 中点 坐标 的 点 对象 直接 连通 deflinecheck pp pxpxorpypy 同 行同 列 的 情况 吗 print 同 行同 列 的 情况 同 列 的 情况 if pxpxandpypy print 同 列 的 情况 绝对 距离 中间 隔着 的 空格 数 absdistanceabs pypy 正 负值 absdistance if mappxpyizf 空格 数 加 遇到 阻碍 就 不用 再 探测 了 同行 的 情况 elif pypyandpxpx print 同行 的 情况 absdistanceabs pxpx 正 负值 absdistance if mappxizfpy 空格 数 加 遇到 阻碍 就 不用 再 探测 了 if 可 联通 print print 行列 可直接 联通 行列 不能 消除 returnfalseelse 不是 同 行同 列 的 情况 所以 直接 返回 第二种 直角 连通 直角 连接 即 xy 坐标 都 不同 的 可以用 这个 方法 尝试 连接 paramfirst 选中 的 第一个 点 paramsecond 选中 的 第二个 点 pp 第一个 直角 检查点 如果 这里 为 空 则 赋予 相同 值 供 检查 checkppoint pxpy 第二个 直角 检查点 如果 这里 为 空 则 赋予 相同 值 供 检查 checkppoint pxpy 第一个 直角 点 检测 if if linecheck pcheckp andlinecheck checkpp checkp print 直角 消除 returntrue 第二个 直角 点 检测 if if linecheck pcheckp andlinecheck checkpp checkp print 直角 消除 returntrueprint 不能 直角 消除 returnfalse 第三种 双 直角 连通 双 直角 联通 判定 可分 两步 走在 p 点 周围 个 方向 寻找 空格 checkp 调用 onecornerlink checkpp 即 遍历 p 个 方向 的 空格 使 之 成为 checkp 然后 调用 onecornerlink checkpp 判定 是否 为 真 如果 为 真 则 可以 双 直角 连同 否则 当 所有 的 空格 都 遍历 完 而 没有 找到 一个 checkp 使 onecornerlink checkpp 为 真 则 两点 不能 连同 具体 代码 双 直角 连接 方法 paramp 第一个 点 paramp 第二个 点 pp checkppoint pxpy 四向 探测 开始 foriinrange 向下 if i checkpywhile checkpyltheight checkp if onecornerlink checkpp print 下 探测 ok checkpyprint 补充 两个 折 点 都在 游戏 区域 底 侧 外部 ifcheckpyheight 出了 底部 则 仅 需 判断 p 能否 也 达到 底部 边界 zpoint pxheight 底部 边界点 iflinecheck zp 两个 折 点在 区域 外部 的 底 侧 point pxheight point pxheight print 下探 测到 游戏 区域 外部 ok returntrue 向右 elif i checkpxwhile checkpxltwidth checkp if onecornerlink checkpp print 右 探测 ok checkpx 补充 两个 折 点 都在 游戏 区域 右侧 外部 ifcheckpxwidth 出了 右侧 则 仅 需 判断 p 能否 也 达到 右 部 边界 zpoint widthpy 右 部 边界点 iflinecheck zp 两个 折 点在 区域 外部 的 底 侧 point widthpy point widthpy print 右 探 测到 游戏 区域 外部 ok returntrue 向左 elif i checkpxwhile checkpxgt checkp if onecornerlink checkpp print 左 探测 ok checkpx 向上 elif i checkpywhile checkpygt checkp if onecornerlink checkpp print 上 探测 ok checkpy 四个 方向 都 寻 完 都没 找到 适合 的 checkp 点 print 两 直角 连接 没找到 适合 的 checkp 点 returnfalse 画 连接线 defdrawlinkline pp if len linepointstack lineidappend drawline pp elseprint linepointstack if len linepointstack print 一折 连 通点 zzxzy lineidappend drawline pz lineidappend drawline pz if len linepointstack print 折 连 通点 zzxzy lineidappend drawline pz print 折 连 通点 zzxzy lineidappend drawline zz lineidappend drawline pz 删除 连接线 whilelen lineid cvdelete idpop defdrawline pp print cvcreateline widthfillred idcvcreateline cvpack 产生 map 地图 globalmap 生成 随机 地图 将 所有 匹配 成对 的 动物 物种 放进 一个 临时 的 地 图中 tmpmapm width height print mm forxinrange m foriinrange 每种 方块 有 个 tmpmapappend x randomshuffle tmpmap forxinrange width foryinrange height event 自动 查找 第一个 方块 从 地图 的 位置 开始 foriinrange mnrowmncol 找到 则 跳出 循环 if bfound break 算出 对应 的 虚拟 行列 位置 xy 无 图案 的 方块 跳过 if mapxy continue 第二个 方块 从前 一个 方块 的 后面 开始 forjinrange imnrowmncol 算出 对应 的 虚拟 行列 位置 xy 第二个 方块 不为 空 且 与 第一个 方块 的 动物 相同 if mapxyandissame pp 判断 是否 可以 连通 if islink pp bfoundtruebreak 找到 后 自动 消除 if bfound pxy 与 pxy 连通 print 找到 后 pxpypxpy 画 选定 xy 处 的 框 线 画 选定 xy 处 的 框 线 ttimer 定时 函数 tstart returnbfound 游戏 主 逻辑 roottk roottitle python 连连看 imgsphotoimage i gif foriinrange 所有 图标 图案 是否 已经 选中 第一 块 被 选中 第一 块 地图 对象 被 选中 第二 块 地图 对象 height forxinrange width height forxinrange width cvcanvas drawqipan cvbind 鼠标 左键 事件 cvbind 鼠标 右键 事件 cvpack createmap 产生 map 地图 printmap 打印 map 地图 rootmainloop 