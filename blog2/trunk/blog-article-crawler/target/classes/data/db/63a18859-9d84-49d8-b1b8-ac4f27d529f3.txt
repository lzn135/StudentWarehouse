mysql 隐 式 转换 解决方案 一 mysql 隐 式 转换 有 个 大坑 当 表 字段 设置成 字符串 类型 查询 的 时候 传 整型 mysql 会将 全 表 字符串 类型 转换成 整型 再 比较 触发 全 表 扫描 参考 不管 字段 是什么 类型 只要 in 内部 同时 出现 整型 和 字符串 时会 无法 使用 索引 会 触发 全 表 扫描 参考 二 目前 看来 比较 稳妥 的 方案 框架 层 面对 记录 每个 字段 的 类型 根据 字段 类型 做 转换 如果是 新项目 可以 这么做 或者 选 了 一个 封装 很重 的 框架 必须 设置 表 字段 类型 应该 就 不用 担心 这个 问 题了 在 底层 将 所有 字段 包括 in 查询 中 每个 值 统一 转成 字符串 统一 转成 字符串 刚好 可以 规避 以上 两个 大坑 目前 除了 性能 会 变差 一点 和 无法 直接 用 整型 查询 字符串 类型 这两个 问题 都可 忽略 没有 发现 什么 大问题 三 附上 mysql 隐 式 转换规则 两个 参数 至少有 一个是 null 时 比较 的 结果 也是 null 例外 是 使用 ltgt 对 两个 null 做 比较 时会 返回 这两种 都不 需 要做 类型 转换 两个 参数 都是 字符 串会 按照 字符串 来 做 比较 不做 类型 转换 两个 参数 都是 整数 按照 整数 来 比较 不做 类型 转换 十六进制 的 值 和 非 数字 做 对比 时 会被 当做 二进制 串 有 一个 参数 是 timestamp 或者 datetime 时 并且 另外 一个 参数 是 常量 常量 会被 转 换为 timestamp 有 一个 参数 是 decimal 类型 如果 另外 一个是 decimal 或者 整数 会将 整数 转 换为 decimal 后 进行 比较 如果 另外 一个 参数 浮点数 则 会把 decimal 转 换为 浮点数 进行 比较 所有 其他 情况下 两个 参数 都 会被 转 换为 浮点数 再 进行 比较 问题 描述 where 条件 语句 里 字段 属性 和 赋 给 的 条件 当 数据类型 不一样 这时候 是 没办法 进行 直接 比较 的 需要 进行 一致性 转换 默认 的 转换规则 为 不同 类型 全部都 转 换为 浮点 型 如果 字段 是 字符 条件 是 整型 那么 会把 表 中 的 字段 全部 转 换为 整型 转换 总结 字符 转 整型 字符 开头 的 一律 为 数字 开头 的 直接 截 取到 第一个 不是 字符 的 位置 时间 类型 转换 date 转 datetime 或者 timestamp 追加 date 转 time 无意义 直接 为 datetime 或者 timestamp 转 date 直接 截取 date 字段 datetime 或者 timestamp 转 time 直接 截取 time 字段 time 转 datetime 或者 timestamp 按照 字符串 进行 截取 time 和 datetime 转 换为 数字 时会 变为 双 精度 加上 ms 版本 不同 有 区别 