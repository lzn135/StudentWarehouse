java 正 青春 现状 与 技术 趋势 报告 背景 年 jamesgosling 带领 团队 开始 了 一个 叫 oak 的 项目 这个 就是 java 的 前身 年 java 发布 这句 java 口号 想必 大家 耳熟能详 java 刚开始 出现 的 时候 主要 面向 领域 直至 后来 几年 的 发展 当时 的 sun 后来 在年 被 oracle 收购 一度 想用 java 来 打造 桌面 的 网络 操作系统 取代 当时 如日中天 的 windows 不过 java 后来 的 发展 不 曾想 虽 未在 桌面 领域内 取得 多大 的 建树 出乎意料 地 却在 企业级 应用领域 开花结果 占据 了 如今 几乎 统治 的 地位 失 之 東 隅 却 收之桑榆 javase 开源 现状 sun 在年 的 javaone 大会上 宣布 java 技术 开源 随后 年底 在 gpl 协议 下 发布 hotspot 以及 javac 这是 java 发展中 的 里程碑 事件 阿里巴巴 最 早在 签署 oca 并 参与 到了 openjdk 的 开发 openjdk 是 javase 开源 的 在 javaone 的 keynote 上 年 javaone 被 oracle 重 命名为 codeone oracle 承诺 将 开源 所有 的 oraclejdk 里 包含 的 商业 实现 功能 在年 发布 的 javaoracle 已经 让 openjdk 和 oraclejdk 两者 的 二进制 文件 在 功能上 尽可能 相互 接近 尽管 openjdk 与 oraclejdk 两者 在 一些 选项 之间 仍然 存在 一些 差异 另外 除了 openjdk 这条 主线 在 最近 的 几 年里 java 基础 技术 的 开源 有 愈演愈烈 趋势 年 ibm 将 内部 使用 多年 之久 的 j 虚拟机 开源 并 贡献 到 而 随 后年 oracle 开源 graalvm 其 核心 包含 用 java 写 的 以及 支持 多语言 解释 器 的 truffle 框架 各个 企业 开源 的 主要 动机 想 通过 开源 构建 并 受益 于 一个 更为 强大 的 语言 生态系统 云 开源 结合 在一起 使得 普通 开发者 以 较低 的 门槛 获得 一流 工具 链 的 使用 和 体验 任何 一家 企业 都可以 像 任何 大型 组织 一样 使用 的 相同 技术 democratizing 这是 开发者 的 黄金时代 javaisstillfree 你 该 选择 什么样 的 jdkjava 仍然 免费 但随着 变化 开始 转向 收费 openjdk 会 逐渐 取代 oraclejdk 成为 市场 主流 这点 也 可以 从 jvm 生态 报告 中 看出 趋势 oraclejdk 从前 一年 的 的 开发者 选择 使用率 降到 年 的 oraclejdk 收费 在 客观上 也 加剧 了 openjdk 生态 的 碎片 化 趋势 出现 了 包括 在内 的 多个 基于 openjdk 的 可选 实现 企业 在 选择 使用 那个 javavendor 的 jdk 版本 时 几个 方面 的 考虑 因素 可以 参考 安全 与 稳定 是否 会 及时 同步 上游 的 最新更新 包括 安全补丁 关键 的 问题 修复 等 javase 标准 兼容 是否 与 标准 java 兼容性 能与 效率 是否 可以 在 问题 诊断 性能 调 优 方面 提供 有效 的 工具 支持 帮助 一线 的 开发 同学 高效 地 解决 java 问 题在 jvm 到 jdk classlibrary 层面 是否 有 面向 企业 业务 场景 的 优化 特性 可以 帮助 提升 资源 的 利用率 生产 系统 的 稳定性 等等 快速 的 新技术 采纳 伴随 收费 oracle 管理 java 版本 生命周期 采 用了 longtermsupport lts 的 概念 oracle 每 三 年会 指定 一个 lts 的 java 版本 java 都是 lts 版本 大部分 企业 尤其是 大中型企业 很难 跟上 java 每 六个月 一 发布 的 节奏 像 java 这样 的 featurerelease fr 版本 那么 问题 来了 如果 你 选择 stay 在 lts 版本 上 比如 java 在 新版本 java 发布 的 jvmjdk 技术 是否 可以 在 不 升级 的 情况下 提前 享受 这些 技术 红利 这里 分享 下 在 这些 方面 的 计划 与 思考 是 阿里巴巴 内部 广泛 使用 的 ajdk alibabajdk 的 开源 版本 作为 基石 支 撑了 阿里 经济 体内 几乎 所有 的 java 业务 经 过了 双 等 大 促 的 考验 主要 针对 的 场景 是 数据中心 大规模 java 应用 部署 情况下 java 应用 稳定性 效率 以及 性能 的 优化 与 提高 年月 阿里 开源 我们 也 一直 正在 践行 开源 时候 的 承诺 ajdk 内部 使用 的 特性 在 逐步 开源 到 刚刚 发布 我们 已经 开源 了 多 租户 jfr 等 众多 功能 协 程 wispgcih 等 也 在 开源 的 规 划上 同时 作为 openjdk 的 下游 每个 发行版 都会 同步 上游 最新更新 包括 安全 更新 问题 修复 等 并 经过 阿里 内部 大规模 的 应用 集群 测试 在 新技术 adoption 方面 目前 发布 和 维护 了 java 两个 lts 版本 阿里 jvm 团队 会 根据 实际 业务 状况 移植 java 的 相关 功 能到 java 和 两个 版本 这样 用户 可以 在 不 跟进 java 等 这些 fr 版本 的 情况下 提前 享受 这些 功能 带来 的 技术 红利 openjdk 技术 趋势 纵观 java 技术 多年 的 发展 始终 围绕着 两大 主题 productivity 以及 performance 在 很多 情况下 java 在 设计 上 productivity 是 优于 performance 考虑 的 java 引入 的 把 程序员 从 复杂 的 内存 管理 中 解脱 出来 但在 另一方面 java 应用 始终 困扰 于 gc 暂停 时间 的 影响 java 基于 栈 式 虚拟机 的 中间 字节 码 设计 很好 地 抽象 了 不同 平台 intelarm 等 的 差异性 同时 通过 justintime jit 编译 技术 解决 的 java 应用 peak 性能 但在 另一方面 jit 不可避免 引 入了 warmup 的 代价 正常 情况下 java 程序 永远 需要 先 loadclass 解释 执行 然后 再到 高度 优化 的 代码 执行 如果 从 jvm 视角 来 总结 梳理 下 目前 openjdk 社区 正在 发生 孵化 的 相关 技术 主 要从 工具 gc 编译器 以及 runtime 四个 方面 进行 一个 主要 概括 jfrjmcoracle 从 java 开源 了 其 之前 一直 作为 商业 功能 的 jfrjfr 是 功能强大 的 java 应用 问题 诊断 与 性能 剖析 工具 阿里巴巴 也是 作为 主要 的 贡献者 与 社区 包括 redhat 等 一起 将 jfr 移植 到了 openjdk 预计 年月 即将 发布 的 openjdku java 将会 默认 带有 jfr 功能 这样 java 的 用户 可以 基于 这个 版本 免费 使用 jfr 功能 zgcshandoath 无论是 oracle 在 java 发布 的 zgc 还是 redhat 已经 做了 好几年 的 shandoath 都 实现 了 解决 largeheap 情况下 的 gc 停机 性能 zgc 最新 状态 在 月份 即将 发布 的 jdkzgc 将从 experimental 功能 变为 生产 可用 实际上 在 ajdk 上 阿里巴巴 团队 jvm 团队 已经 做了 大量 java 到 java 的 zgc 移植 工作 以及 相关 问题 修复 年 双 和 阿里 数据库 团队 一起 让 数据库 应用 运 行在 zgc 上 gbheap 情况下 gc 暂停 时间 可以 保持在 ltms 以内 详细 讨论 参考 graal 用 java 开发 的 新一代 justintime 编译 技术 用来 替代 目前 hostsotjvm 的 cc 编译器 openjdk 上 的 aheadoftime aot 技术 也是 基于 graal 编译器 开发 loomopenjdk 社区 协 程 项目 对 应于 ajdk 的 wisp 实现 详细 讨论 可以 参考 进击 的 java 面向未来 演进 站在 一个 全新 的 节点 上 本文 也 从 三个 大 的 方面 cloudnativeai 以及 多语言 生态 三个 方面 展望 下 未来 的 发展 有些 讨论 本身 是 超越 java 本身 的 面向 cloudnative 的 语言 进化 云 原生 时代 软件 的 交付 方式 发生 的 根本性 变化 以 java 为 例 在 之前 java 开发者 交付 的 是 应用 本身 具体 体现在 以 jarwar 的 形式 交付 而 云 原生 则 是以 container 为 交付 单位 的 在 运行 方面 面向 cloudnative 的 应用 要求 语言 作为 企业 计算 互联网 领域 的 王者 拥有 一致性 丰富 的 构 建在 java 语言 之上 的 生态系统 丰富 的 三方 库 多样 的 serviceability 支持 等 随着 云 时代 应用 微 服务 化 serverless 这些 新 的 架构 逐渐 触及 到了 java 程序 速度 提升 的 天花板 java 自身 的 启动 运行 开销 在 cloudnative 这个 新 的 上下文 里 我们 谈论 语言 的 进化 绝不 仅仅 限于 运行时 编译器 层面 新 的 计算 形态 一定 伴随着 编程 模型 的 变革 这 涉及 围绕 程序语言 的 等 一系列 配套 的 改革 从 目前 业界 来看 也有 不少 的 项目 正在 发生 配合 graalvmsvm java 静态 编译 技术 的 下一代 编程 框架 以及 helidonquarkus 更是 提 出了 containerfirst 他们 提倡 的 分层 的 的 概念 正是 符合 了 container 交付 这一 趋势 而 redhat 的 java 团队 与 os 团队 合作 的 技术 azul 在 jvm 技术 峰 会上 也 提 出过 类似 的 想法 则是 在 更加 底层 的 技术 栈 上 解决 java 快速 拉起 问 题在 方向 我们 也 开展 了 相关 研发 工作 java 是 静态 语言 但是 包 含了 大量 的 动态 特性 包括 反射 bci 等等 这些 动态 特性 本质上 都是 违反 graalvmsvm 所 要求 的 cwa 原则 这 也是 导致 传统 跑 在 jvm 的 java 应用 不容易 在 svm 编译 运行 的 主要原因 阿里巴巴 jvm 团队 对 ajdk 做了 静态 化 裁剪 务求 在 java 静 动态 特性 之间 找到 一个 确定 的 边界 从 jdk 的 层面 为 java 静态 编译 提供 可能性 同时 向上 与 蚂蚁 中间 团队 合作 定义 面向 静态 编译 的 java 编程 模型 通过 编程 框架 来 约束 java 应用 的 开发 是 面向 静态 编译 友好 的 我们 静态 编译 了 基于 蚂蚁 开源 中间件 sofastack 构建 的 服务 注册 中心 meta 节点 应用 相较 于 传统 的 运 行在 jvm 上 性能 有 有 量级 的 提升 服务 启动 时间 降 低了 倍 可执行文件 大小 降 低了 倍 运行时 内存 降 低了 一半 详见 ai 的 兴起 编程 语言 异构计算 的 新 挑战 年 时任 intelcto 的 justinrattner 说 过 在 前后 的 十几 年中 编程 语言 与 编译器 领域 一直在 努力 面向 做 优化 探索 随着 ai 这些年 的 兴起 不同 的 时间 节点 相似 的 场景 面向 fpgagpu 异构计算 场景 对 编程 语言 与 编译器 领域 提 出了 新 的 挑战 除了 传统 compiler 诸如 等 做的 工作 在 极致 性能 探索 方面 基于 多面体模型 polytopemodel 的 编译 优化 技术 作为 解决 程序 并行 化 数据 局部性 优化 的 一种 手段 成为 编译 优化 领域 的 研究 热点 而在 层 面对 campc 开发人员 cuda 的 出现 降 低了 gpu 的 编程 门槛 但 gpu 和 cpu 两种 硬件 模型 本质区别 导致 过高 的 开发 成本 需要 学习 和 了解 更多 底层 硬件 细节 还 更 不用说 更 高级 语言 的 开发 语言 像 java 等 所 面临 的 底层 硬件 模型 与 高级 语言 之间 巨大 的 gap 在 java 领域 最 早在 jvm 技术 峰会 amd 曾经 分享 过 他们 的 sumatra 项目 尝试 实现 jvm 与 目标 硬件 交互 而在 最近 由 发起 的 tornadovm 项目 实现 包含 一个 justintime 编译 支持 从 javabytecode 到 opencl 的 映射 一个 优化 的 运行时 引擎 以及 可以 保持 java 堆 和 异构 设备 堆 内存 一致性 的 内存 管理器 tornadovm 的 目标 是 开发人员 不需要 了解 gpu 编程 语言 或者 相关 的 gpu 体系结构 知识 就可以 编写 面向 异构 的 并行 程序 tornadovm 可以 透明地 运 行在 以及 multicorecpus 上 在 通用 cpu 领域 openjdk 社区 的 vectorapi 项目 panama 的 子项目 依赖 cpu 的 simd 指令 获得 计算 性能 的 成倍 提升 vectorapi 在 大 数据 ai 计算 也有 非常 广 的 应用 场景 阿里 jvm 团队 把 vectorapi 移植 到了 ajdk 后续 会 开源 到 分享 下 我们 获得 的 基础 性能 数据 时间 单位 milliseconds 越短 性能 越好 链接 多语言 生态 并不是 一个 新 的 概 念在 managedruntime 领域 年 ibm 开源 omr 以及 年 oracle 开源 trufflegraal 技术 omr 和 graal 技术 让 开发人员 实现 一个 新 的 语言 成本 大幅 下降 前者 omr 以 cc 组件 的 形式 提供 了 gc justintime jit 以及 ras 工具 等 开发人员 可以 依赖 这些 组件 通过 glue 的 方式 基于 这些 组件 实现 自己 的 高性能 语言 而 后者 是 一个 依赖 astparser 实现 新 的 语言 的 java 框架 本质上 是 将你 的 新 的 语言 映 射到 jvm 世界 不同于 scalajruby 这些 围绕 jvm 生态 本身 构建 的 语言 他们 本质 是 还是 java 无论是 omr 还是 trufflegraal 他们 都 提供 了 生产 级 的 gcjit 以及 ras 服务 支持 新 开发 的 语言 完全 不需要 再 重新 实现 这些 底层 技术 从 业界 来看 面向 特定 领域 的 dsl 语言 已经有 向 这些 技术 迁移 的 趋势 高 盛 正在 与 graal 社区 合作 把 他们 的 dsl 迁 移到 graal 上 另外 等 这些 真正 链接 不同 语言 生态 的 项目 也 正在 迅速 发展起来 回到 ajdkgraal 已经在 ajdk 开始 支持 jsgraal 这样 成熟 的 技术 已经在 阿里 内部 业务 上线 最后 java 是 一项 二十 多年前 被 发明 出来 的 技术 她 历经 磨难 几 易 其 主 但却 历久弥新 这篇 报告 旨 在为 java 的 开发者 们 梳理 下 目前 的 java 技术 现状 以及 讨论 在 云 ai 等 这些 重要 领域内 java 技术 的 演进 趋势 在 介绍 的 相关 部分 我们 也 穿插 了 阿里 的 一些 工程 实践 作为 世界上 最大 的 java 用户 之一 我们 也 一直在 探索 把 前沿 的 java 技术 通过 在 阿里 丰富 的 业务 场景 的 试验 真正 把 这些 技术 应用于 真实 的 生产 环境 我们 也 非常 乐于 分享 和 贡献 java 领域 的 经验 实践 与 技术 洞见 共同 促进 java 的 发展 参考 