java 用 socket 制作 一个 简易 多人 聊天室 代码 服务器端 stringargs while true socketlistadd socket 把 sock 对象 加入 sock 集合 初始化 多线程 ststart 启动 多线程 catch exceptionex finallytryif catch exceptionex 将 一个 字符串 转 化为 字符 数组 src 加密 操作 for outputwritechar chararri 用作 结束 标志符 outputwritechar outputflush 读取 并 解密 true if charsrc rtnrtn char charsrc 初始化 true 监视 当前 客户端 有没有 发来 消息 if clientisclosed input amp if startequals param 分析 客户端 发来 的 内容 sendparam 进入 聊天室 elsesendparam 说 paramif equals param 为 退出 聊天室 信号 for 遍历 socke 集合 把 读 取到 的 消息 发送给 各个 客户端 if socketisclosed boencryptwrite sendoutput else 如果有 客户端 退出 for 遍历 socke 集合 if socketclient 告诉 其他人 此人 退出 聊天室 if socketisclosed boencryptwrite param 已 退出 聊天室 output boencryptwrite output 返回 信号 给 要 退出 的 客户端 然后 关闭 线程 clientclose inputclose outputclose elsebreakcatch exceptionex 客户端 服务端 服务端 端口 systemin stringaa postart publicvoidstart 欢迎 使用 匿名 聊天室 请 输入 你 将要 使用 的 昵称 namescnextline 获取 昵称 socketnewsocket ipport sendnameamp start 把 昵称 发送到 server 告诉 所有人 有 新 成员 加入 聊天室 如果 要 退出 聊天室 请 输入 成功 进入 匿名 聊天室 encryptwrite sendoutput outoutnewout outstart 启动 发送 聊天 内容 的 多线程 while true input if equals receive 如果 收到 则 退出 聊天室 成功 退出 匿名 聊天室 inputclose outputclose socketclose systemexit receive catch exceptionex finallytryif socketnull socketclose inputclose outputclose catch exceptionex 将 一个 字符串 转 化为 字符 数组 加密 操作 for outputwritechar chararri 用作 结束 标志符 outputwritechar outputflush 读取 并 解密 true if charsrc rtnrtn char charsrc systemin out trywhile true 获取 用户 输入 把 聊天 内容 打包 成约 定 形式 poencryptwrite sendoutput catch exceptionex sfef 实现 效果 实验 心得 用于 接收 信息 的 字符串 每次 都要 重新 定义 一个 不 能在 开头 只 定义 一次 这样 会 导致 数组 角 标 异常 的 错误 因为 每次 接 收到 的 信息 的 长度 都不 一样 的 所以 每次 用 都要 重新 new 一个 字符串 调用 多线程 的 时候 一定 要把 socket 或者 inputoutput 参数 传 递给 构造 函数 初 初始化 不 能用 类 output 的 形式 调用 不然 会 有空 指针 的 错误 原因 大概是 直接 调用 的 可能是 还没 初始化 的 为了 程序 的 健壮性 我们 需 要对 当 有 客户端 退出 聊天室 的 情况 进行 处理 如果 不 处 理当 有人 强制 退出 聊天室 时会 导致 服务端 崩溃 发生 空 指针 异常 在 这个 程序 主 中 我 约定 用为 退出 信息 当 客户端 发出 时 即 退出 聊天室 关闭 对应 socket 此处 关键 点 是 要 理清 谁先 关闭 谁 后 关闭 不然 也 会 导致 socket 崩溃 流程 应该是 发送 告知 服务器端 我 要 退出 了 然后 服务器 返回 信号 给 客户端 我 已 知晓 你 可以 退出 了 然后 客户端 服务器端 才 可以 关闭 socket 转 载于 