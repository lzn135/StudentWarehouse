用 javascript canvas 做的 走 迷宫 游戏 肝 了 一 下午 请 帮忙 点个 赞 引言 上午 女儿 跟我 去逛 超市 在 文具 区 看到 一本书 总共有 幅 图 都是 小 迷宫 游戏 图 什么的 都 挺 漂亮 就是 有点 贵 应该是 纸 比较 好要 多 块钱 我 就 觉得 划不来 典型 的 铁公鸡 我 就 跟 女儿 说 家里 有 买了 其他 东西 就回 来了 然后 网上 查 了 一下 主要 用到 的 是 一个 算法 于是 吃完 午饭 就 开始 写了 这 就学 马 老师 来 一波 回首 掏 有人 可能 会说 你 这人 真 抠门 这 点钱 都 舍不得 掏 我 会说 这是 钱 的 问题 吗 这是 专业 我们 程序员 的 钱 有 那么 好赚 吗 我 待会 就 跟我 老婆 要 块钱 说 我 买了 个 迷宫 游戏 书 我们 程序员 的 钱 不就是 敲 代码 来 的 吗 变现 有 问题 效果 刷新 就可以 换一个 通道 不比 书香 可以 一直 玩 一直 玩 一 直爽 算法 网上 抄 的 将 起点 作为 当前 迷宫 单元 并 标 记为 已 访问 当 还 存在 未 标记 的 迷宫 单元 进行 循环 如果 当前 迷宫 单元 有 未被 访 问过 的 的 相邻 的 迷宫 单元 随机 选择 一个 未 访问 的 相邻 迷宫 单元 将 当前 迷宫 单元 入 栈 移除 当前 迷宫 单元 与 相邻 迷宫 单元 的 墙 标记 相邻 迷宫 单元 并 用它 作为 当前 迷宫 单元 如果 当前 迷宫 单元 不存在 未 访问 的 相邻 迷宫 单元 并且 栈 不 空 栈 顶 的 迷宫 单元 出 栈 令其 成为 当前 迷宫 单元 这个 算法 叫做 深度 优先 简单 来说 就是 从起 点 开始 走 寻找 它 的 上下左右 个 邻居 然后 随机 一个 走到 走 不通 的 时候 就 返回 上 一步 继续 走 直到 全部 单元 都 走完 实现 思路 这个 自己 写 的 创建 格子 单元 对象 通过 算法 将 这些 格子 打通 绘制 出 迷宫 的 形状 绘制 入口 与 终点 的 格子 添加 键盘 的 上下左右 移动 事件 写好 对应 的 函数 到达 终点 提示 胜利 相关 图示 图 每个 单元 的 墙 分为 上 墙 右 墙 下 墙 左 墙 把 这些 墙 用 长度 为 的 数组 表示 元素 的 值 为 true 则 表示 墙 存在 否则 墙 不存在 代码 里 数组 的 下标 方式 来 确定 墙 是否 存在 单元 是 根据 行列 来 创建 的 会 用到 双循环 类似 表格 比如 第二 行 用 i 来 表示 的话 就是 第 列 用 j 来 表示 就是 那 第二 行 第 列 的 元素 组合 起来 就是 那 同理 它 的 上 邻居 就是 右 邻居 下 邻居 左 邻居 也 就是 上下 邻居 是 i 减 加 左右 邻居 是 j 减 加 正方形 个 点 的 坐标 分别为 xy xy xy xy 计算 坐标 的 公式 为 左上角 坐标 xjwyiw 右上角 坐标 x j wyiw 右下角 坐标 x j wy i w 左下角 坐标 xjwy i w 计算 坐标 假如 每个 正方形 的 宽 高 都是 那么 这个 单元 的 坐标 如 下图 墙 的 处理 之前 说到 墙 是以 一个个 元素 的 数组 来 表示 的 比如 数组 为 则 图为 如果 数组 为 则 图为 如果 要 联通 右边 的 邻居 要 怎么做 呢 当前 单元 去除 右 墙 右边 单元 去除 左 墙 这样 就 联 通了 去除 后 就这样 以此类推 代码 及 讲解 新增 构造 函数 此 构造 函数 不是 直接 利用 rect 来 绘制 方形 的 而是 自己 以 绘制 条 直线 的 方式 来 绘制 的 既 方形 的 上 右下 左 条 直线 计算 坐标 这个 上面 已经 提过 根据 墙 数组 的 值 来 确定 是否 绘制 这条 直线 就 绘制 完整 的 方形 的话 上边 就会 缺失 代码 用 条 直线 画 方形 的 构造 函数 o thisxx 坐标 thisyy 坐标 thisinit o thisaxis thisithisj o for varkeyino thiskeyokey 上 右下 左 面墙 true 就 表示 要 绘制 根据 ij 计算出 坐标 ij 代表 行 j 代 表列 左上角 坐标 thisxjwthisyiw 右上角 坐标 thisx j wthisyiw 右下角 坐标 thisx j wthisy i w 左下角 坐标 thisxjwthisy i w 绘制 函数 context this obj ctxbeginpath ctxtranslate objxobjy if objlinewidth 判断 上 右下 左 的 墙 true 的话 墙 就会 有 否则 墙 就 没有 top ctxmoveto objxobjy ctxlineto objxobjy if right ctxmoveto objxobjy ctxlineto objxobjy if bottom ctxmoveto objxobjy ctxlineto objxobjy if left ctxmoveto objxobjy ctxlineto objxobjy objstrokestyle nullctxstroke ctxrestore returnthis 绘制 thishthisdis thiswthisdis 根据 行 数列 数来 创建 格子 for for ij cell 创建 格子 ij 创建 格子 对象 param returncell 根据 算法 打通 墙 给 每个 单元格 对象 都 增加 邻居 查找 方法 查找 当前 单元 是否 有 未被 访问 的 邻居 单元 邻居 分为 上下左右 返回 的 数组 if top respush top if right respush right if bottom respush bottom if left respush left returnres 返回 邻居 数组 查找 邻居 typelostvisited type keythisassemkey thisithisj elseif type keythisassemkey thisithisj elseif type keythisassemkey thisithisj elseif type keythisassemkey thisithisj if key 首先 找到 这个 邻居 if 判断 是否 被 访问 如果 被 访 问了 返回 表示 是否 忽略 访问 的 情况 根据 ij 计算 数组 单元 在 数组 中 的 下 标值 ij if 超出 边界 了 计算出 ij 位置 单元 在 数组 中 的 下标 计算 跟着 算法 来写 的 代码 唯一 要注意 的 是 我 设置 了 一个 值 unvisitedcount 初始值 为 所有 单元 的 数量 每当 一个 单元 被 标 记为 已 访问 后 这个 值 就 递减 当值 为 后 就 终止 循环 结束 算法 将 起点 作为 当前 迷宫 单元 并 标 记为 已 访问 当 还 存在 未 标记 的 迷宫 单元 进行 循环 如果 当前 迷宫 单元 有 未被 访 问过 的 的 相邻 的 迷宫 单元 随机 选择 一个 未 访问 的 相邻 迷宫 单元 将 当前 迷宫 单元 入 栈 移除 当前 迷宫 单元 与 相邻 迷宫 单元 的 墙 标记 相邻 迷宫 单元 并 用它 作为 当前 迷宫 单元 如果 当前 迷宫 单元 不存在 未 访问 的 相邻 迷宫 单元 并且 栈 不 空 栈 顶 的 迷宫 单元 出 栈 令其 成为 当前 迷宫 单元 栈 取 第一个 为 当前 单元 thispatharrpush current 标 记为 已 访问 因为 第一个 已经 设置 为 访 问了 查找 邻居 集合 未被 访问 的 if 如果 当前 迷宫 单元 有 未被 访 问过 的 的 相邻 的 迷宫 单元 随机 选择 一个 未 访问 的 相邻 迷宫 单元 neighborslength 将 当前 迷宫 单元 入 栈 stackpush current 移除 当前 迷宫 单元 与 相邻 迷宫 单元 的 墙 thisremovewall currentnext 标记 相邻 迷宫 单元 并 用它 作为 当前 迷宫 单元 nextvisitedtrue 标记 一个 为 访问 则 计数器 递减 unvisitedcount 递减 stacklengthgt 如果 当前 迷宫 单元 不存在 未 访问 的 相邻 迷宫 单元 并且 栈 不 空 栈 顶 的 迷宫 单元 出 栈 令其 成为 当前 迷宫 单元 varcellstackpop currentcell 推入 路线 数组 thispatharrpush current 移除 墙 移除 当前 迷宫 单元 与 相邻 迷宫 单元 的 墙 ab if aibi 横向 邻居 if ajgtbj 匹 配到 的 是 左边 邻居 左边 邻居 的话 要 移除 自己 的 左 墙 和 邻居 的 右 墙 匹 配到 的 是 右边 邻居 右边 邻居 的话 要 移除 自己 的 右 墙 和 邻居 的 左 墙 ajbj 纵向 邻居 if aigtbi 匹 配到 的 是 上边 邻居 上边 邻居 的话 要 移除 自己 的 上 墙 和 邻居 的 下 墙 匹 配到 的 是 下边 邻居 下边 邻居 的话 要 移除 自己 的 下 墙 和 邻居 的 上 墙 绘制 入口 出口 创建 起点 和 终点 格子 ij varendnewrect x thiscols thisdisthisdisy thisrows 设定 ij 值 判断 是否 终点 end varstartnewrect startistartj 设定 ij 值 控制 移动 start 加入 移动 监听 按键 的 控制 keydownfunction e consolelog thatendflag if thatendflag ekeycode casewcase 上 dir 上 移动 breakcasescase 下 dir 下 移动 breakcaseacase 左 dir 左 移动 breakcasedcase 右 dir 右 移动 breakthatmove dir 测 试用 记得 删除 thatrender 加入 移动 函数 移动 dir 当前 移动 的 方块 cur 根据 移动 方块 的 ij 计算出 得到 移动 方块 对应 的 单元 得到 对应 的 那 面墙 if wall 表示 是 没有 墙 能 移动 dir if neighbor 完成 thisendshow e 计算出 ij 位置 单元 在 数组 中 的 下标 加入 胜利 图 展示 结束 的 图片 胜利 img thisrender 写出来 也 花了 不少 脑细胞 能 看到 这里 的 都是 大佬 我 去找 老婆 提 现 去了 欢迎 各位 大佬 点 赞 评论 关注 谢谢 源码 下载方式 少量 积分 下载 代码 方式 关注 下方 公众 号 回复 下载 代码 