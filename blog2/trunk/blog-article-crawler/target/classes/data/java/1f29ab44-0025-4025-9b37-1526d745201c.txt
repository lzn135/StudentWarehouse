java 反射 详细 解读 小白 看了 都能 懂 反射 了解 反射 我们 首先要 了解 一下 java 代码 在 计算机中 要 经历 的 阶段 有 哪些 java 代码 在 计算机中 经历 的 三个 阶段 第一 部分 source 源代码 阶段 当 我们 写完 一个 java 文件 后 这个 文件 就会 通过 javac 编译 成为 一个 类 文件 存储 在 硬盘 上 例如 第二阶段 class 类 对象 阶段 第一阶段 被 存储 在 硬 盘上 的 类 文件 会 通过 类 加载 器 classloader 以 class 类 对象 的 形式 进入 内存 以供 我们 去 对 其 进行 操作 这个 类 对象 中会 有 三块 区域 一块 放置 成员 变量 一块 放置 构造 方法 一块 放置 成员 方法 例如 第三阶段 runtime 运行时 阶段 我们 可以 在 java 代码 中 通过 new 创建 这个 类 的 对象 来使 用它 的 成员 变量 调 用它 的 方法 这个 阶段 就是 这个 java 文件 的 runtime 运行时 阶段 例如 反射 框架 设计 的 灵魂 框架 是 一个 半成品 的 软件 我们 可以 在 框架 的 基础上 进行 软件开发 框架 可以 帮助 我们 简化 代码 并且 提高 我们 程序 的 效率 反射 定义 将 类 中 的 各个 组成部分 封 装为 其他 对象 这 就是 java 中 的 反射 机制 好处 可以 在 程序 运行 过程中 操作 这些 被封 装好 的 了 的 对象 可以 解 耦 降低 程序 的 耦合 性 提高 程序 的 可 扩展性 java 中 通过 反射 将 类 中 的 各个 组成部分 封 装为 对象 而 我们 可以 在 程序 运行 过程中 使用 这些 对象 而 我们 想要 使用 这些 对象 首先 就要 获 取到 class 类 对象 在 这个 类 对象 中 才 封 装了 我们 想 要去 操作 的 这个 类 中 的 成员 变量 和 方法 下面 我们 就 来说 一下 怎么 获取 class 类 对象 吧 获取 class 类 对象 获取 的 方法 一 共有 三种 分别 对应 着 上面 所述 的 java 代码 执行 的 三个 阶段 classforname 全 类 名 将 字节 码 文件 加载 进 内存 从而 返回 class 对象 这个 方法 是 对 第一阶段 source 源代码 的 操作 多 用于 配置文件 将 类 名 定义 在 配置文件 中 类 名 class 通过 类 名 的 属性 class 获取 这个 方法 是 对 第二阶段 class 类 对象 的 操作 此 方法 多 用于 参数 的 传递 对象 getclass getclass 方法 在 object 类 中被 定义 着 所以在 new 创建 一个 对象 后 就可以 调用 所有 类 的 父 类 object 类 中 的 getclass 方法 去 获取 class 类 对象 这个 方法 是 对 第三阶段 runtime 的 操作 因为 new 方法 让 这个 类 进入 runtime 阶段 此 方法 多 用于 有 对象 时 获取 对象 的 字节 码 文件 注意 同一个 字节 码 文件 在 一次 程序 运行 过程中 只 会被 加载 一次 无论 你 通过 什么 方法 获取 class 类 对象 返回 得到 的 都是 同一个 class 类 对象 那么 当 我们 通过 这些 方法 去 获取 到了 class 类 对象 的 时候 我们 就去 要 使用 这个 class 类 对象 了 那么 我们 下面 来 了解 一下 class 类 对象 的 功能 有 哪些 吧 class 类 对象 的 功能 获取 功能 获取 成员 变量 们 fieldgetfields fieldgetfield stringname stringname 获取 构造 方法 们 类 类 获取 成员 方法 们 methodgetmethod stringname 类 stringname 类 获取 类 名 stringgetname declared 那么 我们 可以 看到 前面 三种 分 别被 有误 declared 分 成了 两组 一组 是 有 declared 这组 方法 可以 获 取到 这个 类 对象 中所 有的 东西 不管 你 是 私有 的 还是 公有 的 还是 保护 的 全部 一股脑 的 可以 给你 显示出来 但是 另外 一组 的 权限 就 没有 那么大 了 只能 获 取到 这个 类 对象 中 公有 的 一些 东西 并不能 访问 到 此类 的 私有 的 或者 被 保护 的 东西 field 成员 变量 通过 上面 的 方法 我们 可以 获 取到 类 对象 的 成员 变量 们 那么 我们 获取 到了 成员 变量 们 就可 以对 其 进行 操 作了 我们 对 变量 的 操作 无外乎 就是 获取 里面 的 值 和 设置 里面 的 值 注意 我们 想要 对 成员 变量 进行 操作 首 先得 new 一个 对象 出来 否则 我们 对 字节 码 操作 成员 变量 将 毫无意义 操作 获 取值 get objectobj 设置 值 voidset 通过 declared 方法 获 取到 的 私有 成员 出于 java 中 的 安全 机制 我们 即使 获取 到了 其 成员 变量 也 暂时 无法 对 其 进行 获 取值 和 设置 值 的 操作 这时候 我们 就要 用到 暴力 反 射了 让 其 暂时 忽略 访问 权限 修饰符 的 安全 检查 暴力 反射 成员 变量 setaccessible true constructor 构造 对象 我们 可以 通过 第二种 获取 类 对象 的 构造 方法 得 到此 构造 方法 那么 我们 获取 到了 这个 构造 方法 能 用来 干什么 呢 众所周知 构造 方法 是 用来 创建 对象 的 所以 我们 拿到 获取 的 构造 方法 我们 就能 通过 这个 返回 出来 的 这个 构造 方法 类 里 的 构造 对象 方法 创建 出来 一个 此类 对象 method 方法 对象 我们 通过 第三 种方法 可以 获 取到 这个 类 中 的 方法 对象 执行 方法 objectinvoke 获取 方法 名称 stringgetname 获取 方 法名 总结 因为 反射 中有 暴力 反射 机制 所以在 反射 面前 任何 类 都没有 隐私 可言 