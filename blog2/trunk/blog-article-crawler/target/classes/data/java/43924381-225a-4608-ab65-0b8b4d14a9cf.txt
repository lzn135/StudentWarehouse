渴望 学习 shader 的 伙伴 有福 了 高斯 模糊 详解 本文 由 壹 伴 编辑器 提供 技术 支 前言 咳 咳 上篇 文章 为什么 选择 typescript 得 到了 许多 朋友 的 认 可让 我 动力 满满 以后 要 加油 写出 更多 好文章 分享 给 大 家鸭 客套话 就不 再多 说了 哈哈 今天 给 大家 带来 的 是 高斯 模糊 在 shader 中 的 实现 gt 这里 预告 一下 shader 入门 系列 文章 一起 学 shader 已经在 积极 筹划 中 文件夹 已经 建 好了 感兴趣 的 小伙伴 关注 一下 啦 本文 由 壹 伴 编辑器 提供 技术 支 预览 模糊 前 模糊 后 深度 模糊 后 本文 由 壹 伴 编辑器 提供 技术 支 正文 高斯 模糊 在 我们 开始 讨论 代码 之前 我们 要 先 稍微 了解 以下几点 gt 下面 的 讲解 比较 笼统 水平 不够 请 见谅 高斯 模糊 是什么 高斯 模糊 gaussianblur 也 叫 高斯 平滑 是 一种 生活 中 比较 常见 的 图像 处理 效果 经过 高斯 模糊 处理 的 图像 看起 来就 像是 在 一块 毛玻璃 后面 也 就是 俗称 的 毛玻璃 效果 高斯 模糊 也 常 用于 处理 噪 点 过高 的 图像 使 图像 看起来 更 平滑 神秘 的 微笑 实现 原理 是什么 从 数学 的 角度 来看 高斯 模糊 的 处理 过程 就是 图像 与其 正态分布 做 卷积 正态分布 正态分布 是 一种 概率 分布 主要特征 为 集 中性 对称性 和 均匀 变动 性 等 因 正态分布 又称 高斯分布 所以 这种 技术 就 叫做 高斯 模糊 我们 可以 计算 当前 像素 一定 范围内 的 像素 的 权重 越 靠近 当前 像素 权重 越大 形成 一个 符合 正态分布 的 权重 矩阵 图片 来源于 网络 侵 删 卷积 卷积 convolution 是 一种 积分 变换 的 数学 运算 方法 利用 卷积 算法 我们 可以 将 当前 像素 的 颜色 与 周围 像素 的 颜色 按 比例 进行 融合 得到 一个 相对 均匀 的 颜色 图片 来源于 网络 侵 删 卷积 核 其中 还 涉及到 一个 名为 卷积 核 的 概念 卷积 核 一般 为 矩阵 我们 可以 将它 想象 成 卷积 过程中 使用 的 模板 模板 中 包含 了 当前 像素 周围 每个 像素 颜色 的 权重 gt 下图 中间 的 那 部分 就是 卷积 核 图片 来源于 网络 侵 删 稍微 总结 用 大白话 来 解释 高斯 模糊 就是 采集 当前 像素 一定 范围内 的 颜色 将 采集 到 的 颜色 按 比例 进行 合成 越 靠近 当前 像素 的 颜色 比例 越高 也 就是 正态分布 的 体现 得到 一个 比较 均匀 的 颜色 将 图像 中 的 每个 像素 都 按照 上面 的 流程 进行 处理 最后 就可以 得到 更为 平滑 模糊 的 图像 当然 采集 的 范围 越大 得到 的 图像 就会 越 模糊 代码 实现 下面 我 将在 cocoscreator 中 实现 一个 高斯 模糊 的 shader 除了 前面 部分 属性 定义 核心 的 逻辑 是 通用 的 gtshader 文件 已 添加 至 eazaxccc 项目 点击 文章 底部 阅读 原文 即可 获取 完整 代码 eazaxccc 高斯 模糊 节点 尺寸 aposition 模糊 半径 for 循环 的 次数 必须 为 常量 获取 模糊 颜色 vecgetblurcolor vecpos veccolorvec 初始 颜色 floatsum 总 权重 卷积 过程 for 水平 方向 for 垂直 方向 vectargetposvec rsizexcsizey 目标 像素 位置 floatweight radiusabs r radiusabs c 计算 权重 colortextured texturetarget weight 累加 颜色 sumweight 累加 权重 colorsum 求出 平均值 vuv 获取 模糊 后 的 颜色 coloravcolora 还原 透明度 代码 分析 cceffect 首先 头部 是 平平 无奇 的 yaml 格式 的 属性 定义 代码 块 唯一 特别 的 地方 就是 多了 个 size 属性 用于 输入 作用 节点 的 尺寸 节点 尺寸 你 可能会 好奇 也许 不会 为什么 要 传入 节点 尺寸 这里 稍微 说明 一 下在 片段 着色器 阶段 的 顶点 坐标 用 视 口 坐标 表示 视 口 坐标 是 标准化 normalize 后 的 屏幕 坐标 其 可用 范围 是 到 原点 为 左下角 例如 屏幕 正中间 的 视 口 坐标 应为 我们 传入 尺寸 的 目的 就是 便于 我们 计算 顶点 的 实际 位置 例 如在 一个 x 的 屏幕 中 像素 与 像素 之间 的 水平 距离 为 垂直距离 为 顶点 着色器 vertexshader 紧跟 其后 的 是 一个 平平 无奇 的 顶点 着色器 未 对 顶点 作 任何 特殊 处理 直接 将 顶点 坐标 以及 颜色 信息 传 递给 下一个 着色器 gt 这 部分 代码 在上面 完整 代码 里 有 我 这里 就不 贴了 因为 实在是 太 平平 无奇 了 gt 不如 贴个 猫 包 猫猫 表情 包 缓和 一下 气氛 吧 片段 着色器 重头戏 来了 敲 黑板 首先 我们 拿 到了 从 顶点 着色器 传递 过来 的 顶点 坐标 和 颜色 信息 另外 还 接收 到了 texture 和 size 属性 接收 传入 的 size 属性 接着 定义 了 一个 常量 radius 来 表示 模糊 采样 的 半径 半径 越大 采样 的 颜色 越多 图像 也 就越 模糊 gt 在 glsl 中 循环 的 次数 必须 为 常量 因为 循环 语句 会被 展开 为 原生 gpu 指令 所以 必须 确定 循环展开 次数 shader 编译器 才能 正确地 生成 gpu 指令 然后 定义 了 一个 函数 getblurcolor 来 获取 模糊 后 的 颜色 该 函数 接收 一个 顶点 坐标 作为 参数 经 卷积 加权 平均 计算 后 返回 最终 颜色 详细 过程 请看 注释 获取 模糊 颜色 vecgetblurcolor vecpos veccolorvec 初始 颜色 floatsum 总 权重 卷积 过程 for 水平 方向 for 垂直 方向 vectargetposvec rsizexcsizey 目标 像素 位置 floatweight radiusabs r radiusabs c 计算 权重 colortextured texturetarget weight 累加 颜色 sumweight 累加 权重 colorsum 求出 一个 平均值 returncolor 然后 是 着色器 的 主 函数 在 获 取到 模糊 的 颜色 之后 将 颜色 透明度 还 原为 输入 的 透明度 最后 将 舞台 交还给 渲染 管线 voidmain vuv 获取 模糊 后 的 颜色 coloravcolora 还原 透明度 本文 由 壹 伴 编辑器 提供 技术 支 结束语 以上 内容 皆为 陈 皮皮 的 个人观点 文采 不佳 如果 写得 不好 还请 各位 多多 包涵 如果有 哪些地方 说的 不对 还请 各位 指出 希望 与 大家 共同进步 接下来 我会 持续 分享 自己 所学 的 知识 与 见解 欢迎 各位 关注 本 公众 号 我们 下次 见 本文 由 壹 伴 编辑器 提供 技术 支 扫描 二维码 获取 更多 精彩 菜鸟 小 栈 点击 阅读 原文 获取 shader 文件 