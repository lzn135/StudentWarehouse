2021 最新版 java 后端 面试题 java 多线程 与 并发 前言 很多 朋友 问 如何 短时间 突击 java 通过 面试 面试 前 还是 很有 必要 针对性 的 刷 一些 题 很多 朋友 的 实战 能力 很强 但是 理论 比较 薄弱 面试 前 不做 准备 是 很 吃亏 的 这里 整 理了 很多 面试 常 考 的 一些 面试题 希望能 帮助 到你 面试 前 的 复习 并且 找到 一个 好 的 工作 也 节省 你 在 网上 搜索 资料 的 时间 来 学习 整理 的 这些 java 面试题 包括 java 基础 java 多线程 与 并发 编程 消息 中间件 mq 分布式 与 微 服务 持续 更新 中 完整版 java 面试题 地址 道 java 面试题 总结 含答案 解析 内容 地址 java 基础 多线程 与 并发 本文 spring 未 更新 未 更新 mybatis 未 更新 mysql 未 更新 redis 未 更新 分布式 与 微 服务 未 更新 mq 未 更新 线程 的 生命周期 线程 有 几种 状态 线程 通常 有 五种 状态 创建 就绪 运行 阻塞 和 死亡 状态 新建 状态 new 新创 建了 一个 线程 对象 就绪 状态 runnable 线程 对象 创建 后 其他 线程 调 用了 该 对象 的 start 方法 该 状态 的 线程 位于 可 运行 线程 池中 变得 可 运行 等待 获取 cpu 的 使用权 运行 状态 running 就绪 状态 的 线程 获 取了 cpu 执行 程序代码 阻塞状态 blocked 阻塞状态 是 线程 因为 某种原因 放弃 cpu 使用权 暂时 停止 运行 直到 线程 进入 就绪 状态 才有 机会 转到 运行 状态 死亡 状态 dead 线程 执行 完了 或者 因 异常 退 出了 run 方法 该 线程 结束 生命周期 阻塞 的 情况 又 分为 三种 等待 阻塞 运行 的 线程 执行 wait 方法 该 线程 会 释放 占用 的 所有 资源 jvm 会把 该 线程 放入 等待 池中 进入 这个 状态 后 是 不能 自动 唤醒 的 必须 依靠 其他 线程 调用 notify 或 notifyall 方法 才能 被 唤醒 wait 是 object 类 的 方法 同步 阻塞 运行 的 线程 在 获取 对象 的 同步 锁 时 若 该 同步 锁 被 别的 线程 占用 则 jvm 会把 该 线程 放入 锁 池中 其他 阻塞 运行 的 线程 执行 sleep 或 join 方法 或者 发 出了 io 请求 时 jvm 会把 该 线程 置 为 阻塞状态 当 sleep 状态 超时 join 等待 线程 终止 或者 超时 或者 io 处理完毕 时 线程 重新 转入 就绪 状态 sleep 是 thread 类 的 方法 sleep wait join yield 的 区别 锁 池 所有 需要 竞争 同步 锁 的 线程 都会 放在 锁 池 当中 比如 当前 对象 的 锁 已经 被 其中 一个 线程 得到 则 其他 线程 需要 在 这个 锁 池 进行 等待 当前 面的 线程 释放 同步 锁 后 锁 池中 的 线程 去 竞争 同步 锁 当 某个 线程 得到 后会 进入 就绪 队列 进行 等待 cpu 资源 分配 等待 池 当 我们 调用 wait 方法 后 线程 会 放到 等待 池 当中 等待 池 的 线程 是 不 会去 竞争 同步 锁 只有 调 用了 notify 或 notifyall 后 等待 池 的 线程 才会 开始 去 竞争 锁 notify 是 随机 从 等待 池 选出 一个 线程 放到 锁 池 而 notifyall 是 将 等待 池 的 所有 线程 放到 锁 池 当中 sleep 是 thread 类 的 静态 本地 方法 wait 则是 object 类 的 本地 方法 sleep 方法 不会 释放 lock 但是 wait 会 释放 而且 会 加入到 等待 队列 中 sleep 就是 把 cpu 的 执行 资格 和 执行 权 释放 出去 不再 运行 此 线程 当 定时 时间 结束 再 取回 cpu 资源 参与 cpu 的 调度 获 取到 cpu 资源 后 就可以 继续 运 行了 而 如果 sleep 时 该 线程 有 锁 那么 sleep 不会 释放 这个 锁 而是 把 锁 带着 进 入了 冻结 状态 也就是说 其他 需要 这个 锁 的 线程 根本 不可能 获 取到 这个 锁 也就是说 无法 执行 程序 如果在 睡眠 期间 其他 线程 调 用了 这个 线程 的 interrupt 方法 那么 这个 线程 也 会 抛出 异常 返回 这点 和 wait 是 一样 的 sleep 方法 不依 赖于 同步器 synchronized 但是 wait 需要 依赖 synchronized 关键字 sleep 不需 要被 唤醒 休眠 之后 推出 阻塞 但是 wait 需 要不 指定 时间 需 要被 别人 中断 sleep 一般 用于 当前 线程 休眠 或者 轮 循 暂停 操作 wait 则 多 用于 多线程 之间 的 通信 sleep 会 让出 cpu 执行时间 且 强制 上下文切换 而 wait 则不 一定 wait 后 可能 还是 有 机会 重新 竞争 到 锁 继续 执行 的 yield 执行 后 线程 直接 进入 就绪 状态 马上 释 放了 cpu 的 执行 权 但是 依然 保 留了 cpu 的 执行 资格 所以有 可能 cpu 下次 进行 线程 调度 还会 让 这个 线程 获 取到 执行 权 继续 执行 join 执行 后 线程 进入 阻塞状态 例如 在 线程 b 中 调用 线程 a 的 join 那 线程 b 会 进入到 阻塞 队列 直到 线程 a 结束 或 中断 线程 stringargs newrunnable trythreadsleep catch tstart tjoin 这行 代码 必须 要等 t 全部 执行 完毕 才会 执行 对 线程 安全 的 理解 不是 线程 安全 应该是 内存 安全 堆 是 共享 内存 可以 被 所有 线程 访问 当 多个 线程 访问 一个 对象 时 如果 不用 进行 额外 的 同步 控制 或 其他 的 协调 操作 调用 这个 对象 的 行为 都可以 获得 正确 的 结果 我们 就说 这个 对 象是 线程 安全 的 堆 是 进程 和 线程 共有 的 空间 分 全局 堆 和 局部 堆 全局 堆 就是 所有 没有 分配 的 空间 局部 堆 就是 用户 分配 的 空间 堆 在 操作系统 对 进程 初始化 的 时候 分配 运行 过程中 也 可以 向 系统 要 额外 的 堆 但是 用 完了 要 还给 操作系统 要不然 就是 内存 泄 漏在 java 中 堆 是 java 虚拟机 所 管理 的 内存 中 最大 的 一块 是 所有 线程 共享 的 一块 内存 区域 在 虚拟机 启动时 创建 堆 所 存在 的 内存 区域 的 唯一 目的 就是 存放 对象 实例 几乎 所有 的 对象 实例 以及 数组 都在 这里 分配 内存 栈 是 每个 线程 独有 的 保存 其 运行 状态 和 局部 自动 变量 的 栈 在 线程 开始 的 时候 初始化 每个 线程 的 栈 互相 独立 因此 栈 是 线程 安全 的 操作系统 在 切换 线程 的 时候 会 自动 切换 栈 栈 空间 不需 要在 高级 语言 里面 显 式 的 分配 和 释放 目前 主流 操作系统 都是 多任务 的 即 多个 进程 同时 运行 为了 保证 安全 每个 进程 只能 访问 分配给 自己 的 内存空间 而 不能 访问 别的 进程 的 这是 由 操作系统 保障 的 在 每个 进程 的 内存空间 中都 会有 一块 特殊 的 公共 区域 通常 称为 堆 内存 进程 内 的 所有 线程 都可以 访 问到 该 区域 这 就是 造成 问题 的 潜在 原因 threadrunable 的 区别 thread 和 runnable 的 实质 是 继承 关系 没有 可比性 无论 使用 runnable 还是 thread 都会 newthread 然后 执行 run 方法 用法 上 如果有 复杂 的 线程 操作 需求 那就 选择 继承 thread 如果 只是 简单 的 执行 一个 任务 那就 实现 runnable 会 卖出 多 一倍 的 票 stringargs start newmythread start while true if ticketlt break 正常 卖出 stringargs newthread mt start newthread mt start while true if ticketlt break 原因是 mythread 创 建了 两个 实例 自然会 卖出 两倍 属于 用法 错误 对 守护 线程 的 理解 守护 线程 为 所有 非 守护 线程 提供 服务 的 线程 任何 一个 守护 线程 都是 整个 jvm 中所 有 非 守护 线程 的 保姆 守护 线程 类似于 整个 进程 的 一个 默默无闻 的 小 喽 喽 它 的 生死 无关 重要 它 却 依赖 整个 进程 而 运行 哪天 其他 线程 结束 了 没有 要 执行 的 了 程序 就 结束 了 理 都没 理 守护 线程 就把 它 中 断了 注意 由于 守护 线程 的 终止 是 自身 无法控制 的 因此 千万 不 要把 iofile 等 重要 操作 逻辑 分配 给它 因为 它 不靠 谱 守护 线程 的 作用 是什么 举例 gc 垃圾 回收 线程 就是 一个 经典 的 守护 线程 当 我们 的 程序 中 不再 有 任何 运行 的 thread 程序 就不会 再 产生 垃圾 垃圾 回收 器 也就 无事 可 做 所以 当 垃圾 回收 线程 是 jvm 上 仅剩 的 线程 时 垃圾 回收 线程 会 自动 离开 它 始终 在 低级 别的 状态 中 运行 用于 实时 监控 和 管理 系统 中 的 可回收 资源 应用 场景 来 为 其它 线程 提供 服务 支持 的 情况 或者 在任何情况下 程序 结束时 这个 线程 必须 正常 且 立刻 关闭 就可以 作为 守护 线程 来 使用 反之 如果 一个 正在 执行 某个 操作 的 线程 必 须要 正确地 关闭 掉 否则 就会 出现 不好 的 后果 的话 那么 这个 线程 就不能 是 守护 线程 而是 用户 线程 通常 都是 些 关键 的 事务 比方说 数据库 录入 或者 更新 这些 操作 都是 不能 中断 的 threadsetdaemon true 必 须在 threadstart 之前 设置 否 则会 跑出 一个 异常 你 不 能把 正在 运行 的 常规 线程 设置 为 守护 线程 在 daemon 线程 中 产生 的 新 线程 也是 daemon 的 守护 线程 不能 用于 去 访问 固有 资源 比如 读写 操作 或者 计算 逻辑 因为 它会 在 任何时候 甚至在 一个 操作 的 中间 发生 中断 java 自带 的 多线程 框架 比如 executorservice 会将 守护 线程 转 换为 用户 线程 所以 如果 要使 用 后台 线程 就不 能用 java 的 线程 池 threadlocal 的 原理 和 使用 场景 每一个 thread 对象 均 含有 一个 threadlocalmap 类型 的 成员 变量 threadlocals 它 存储 本 线程 中所 有 threadlocal 对象 及其 对应 的 值 threadlocalmap 由 一个个 entry 对象 构成 entry 继承 自 weakreference 一个 entry 由 threadlocal 对象 和 object 构成 由此可见 entry 的 key 是 threadlocal 对象 并且是 一个 弱 引用 当 没 指向 key 的 强 引 用后 该 key 就 会被 垃圾 收集器 回收 当 执行 set 方法 时 threadlocal 首 先会 获取 当前 线程 对象 然后 获取 当前 线程 的 threadlocalmap 对象 再以 当前 threadlocal 对象 为 key 将 值 存储 进 threadlocalmap 对象 中 get 方法 执行 过程 类似 threadlocal 首 先会 获取 当前 线程 对象 然后 获取 当前 线程 的 threadlocalmap 对象 再以 当前 threadlocal 对象 为 key 获取 对应 的 value 由于 每 一条 线程 均 含有 各自 私有 的 threadlocalmap 容器 这些 容器 相互 独立 互不 影响 因此 不会 存在 线程 安全 性问题 从而 也 无需 使用 同步 机制 来 保证 多条 线程 访问 容器 的 互斥 性 使用 场景 在 进行 对象 跨 层 传递 的 时候 使用 threadlocal 可以 避免 多次 传递 打破 层次 间 的 约束 线程 间 数据 隔离 进行 事务 操作 用于 存储 线程 事务 信息 数据库 连接 session 会话 管理 spring 框 架在 事务 开始时 会给 当前 线程 绑定 一个 jdbcconnection 在 整个 事务 过程 都是 使用 该 线程 绑定 的 connection 来 执行 数据库 操作 实现 了 事务 的 隔离 性 spring 框架 里面 就是 用 的 threadlocal 来 实现 这种 隔离 threadlocal 内存 泄露 原因 如何 避免 内存 泄露 为 程序 在 申请 内存 后 无法 释放 已 申请 的 内存空间 一次 内存 泄露 危害 可以 忽略 但 内存 泄露 堆积 后果 很严重 无论 多少 内存 迟早 会被 占光 不再 会被 使用 的 对象 或者 变量 占用 的 内存 不能 被 回收 就是 内存 泄露 强 引用 使用 最 普遍 的 引用 new 一个 对象 具有 强 引用 不 会被 垃圾 回收 器 回收 当 内存空间 不足 java 虚拟机 宁愿 抛出 错误 使 程序 异常 终止 也 不 回收 这种 对象 如果 想 取消 强 引用 和 某个 对象 之间 的 关联 可以 显 式 地 将 引用 赋值 为 null 这样 可 以使 jvm 在 合适 的 时间 就会 回收 该 对象 弱 引用 jvm 进行 垃圾 回收 时 无论 内存 是否 充足 都会 回收 被 弱 引用 关联 的 对象 在 java 中用 类 来 表示 可以 在 缓存 中 使用 弱 引用 threadlocal 的 实现 原理 每一个 thread 维护 一个 为 使用 弱 引用 的 threadlocal 实例 value 为 线程 变量 的 副本 外 链 图片 转存 失败 源 站 可能有 防盗链 机制 建议 将 图片 保存 下来 直接 上传 imgljlylbh hreadlocalmap 使用 threadlocal 的 弱 引用 作为 key 如果 一个 threadlocal 不存在 外部 强 引 用时 key threadlocal 势必 会被 gc 回收 这样 就会 导致 threadlocalmap 中 key 为 null 而 value 还 存在着 强 引用 只有 thead 线程 退出 以后 value 的 强 引用 链条 才会 断掉 但 如果 当前 线程 再 迟迟 不 结束 的话 这些 key 为 null 的 entry 的 value 就会 一直 存在 一条 强 引用 链 红色 链条 key 使用 强 引用 当 hreadlocalmap 的 key 为 强 引用 回收 threadlocal 时 因为 threadlocalmap 还 持有 threadlocal 的 强 引用 如果 没有 手动 删除 threadlocal 不 会被 回收 导致 entry 内存 泄漏 key 使用 弱 引用 当 threadlocalmap 的 key 为 弱 引用 回收 threadlocal 时 由于 threadlocalmap 持有 threadlocal 的 弱 引用 即使 没有 手动 删除 threadlocal 也 会被 回收 当 key 为 null 在下 一次 threadlocalmap 调用 set get remove 方法 的 时候 会被 清除 value 值 因此 threadlocal 内存 泄漏 的 根源 是 由于 threadlocalmap 的 生命周期 跟 thread 一样 长 如果 没有 手动 删除 对应 key 就会 导致 内存 泄漏 而 不是 因为 弱 引用 threadlocal 正确 的 使用方法 每次 使 用完 threadlocal 都 调 用它 的 remove 方法 清除 数据 将 threadlocal 变量 定义 成 privatestatic 这样 就 一直 存在 threadlocal 的 强 引用 也 就能 保证 任何时候 都能 通过 threadlocal 的 弱 引用 访 问到 entry 的 value 值 进而 清 除掉 并发 并行 串行 的 区别 串 行在 时间 上 不可能 发生 重叠 前 一个 任务 没 搞定 下一个 任务 就 只能 等着 并 行在 时间 上 是 重叠 的 两个 任务 在 同一 时刻 互不 干扰 的 同时 执行 并发 允许 两个 任务 彼此 干扰 统一 时间 点 只有 一个 任务 运行 交替 执行 并发 的 三大 特性 原子 性 原子 性 是 指在 一个 操作 中 cpu 不可以 在 中途 暂停 然后再 调度 即 不被 中断 操作 要不 全部 执行 完成 要不 都不 执行 就 好比 转账 从 账户 a 向 账户 b 转 元 那么 必然 包括 个 操作 从 账户 a 减去 元 往 账户 b 加 上元 个 操作 必须 全部 完成 count 将 count 从 主存 读到 工作 内存 中 的 副本 中 的 运算 将 结果 写入 工作 内存 将 工作 内存 的 值 刷 回 主存 什么时候 刷 入 由 操作系统 决定 不确定 的 那 程序 中 原子 性 指的是 最小 的 操作 单元 比如 自 增 操作 它本身 其实 并不是 原子 性 操作 分了 步 的 包括 读取 变量 的 原始 值 进行 加 操作 写入 工作 内存 所以在 多线程 中有 可能 一个 线程 还没 自 增 完 可能 才 执行 到 第二部 另一个 线程 就 已经 读 取了 值 导致 结果 错误 那 如果 我们 能 保证 自 增 操作 是 一个 原子 性 的 操作 那么 就能 保证 其他 线程 读 取到 的 一 定是 自 增 后 的 数据 关键字 synchronized 可 见性 当 多个 线程 访问 同一个 变量 时 一个 线程 修 改了 这个 变量 的 值 其他 线程 能够 立即 看得到 修改 的 值 若 两个 线程 在 不同 的 cpu 那么 线程 改 变了 i 的 值 还没 刷 新到 主存 线程 又使 用了 i 那么 这个 i 值 肯定 还是 之前 的 线程 对 变量 的 修改 线程 没看到 这 就是 可见 性问题 线程 stop dosomething 线程 stoptrue 如果 线程 改 变了 stop 的 值 线程 一 定会 停止 吗 不一 定当 线程 更 改了 stop 变量 的 值 之后 但是 还没 来得及 写入 主存 当中 线程 转 去做 其他 事情 了 那么 线程 由于 不知道 线程 对 stop 变量 的 更改 因此 还会 一直 循环 下去 关键字 有序性 虚拟机 在 进行 代码 编译 时 对于 那些 改变 顺序 之后 不 会对 最终 结果 造成 影响 的 代码 虚拟机 不一 定会 按照 我们 写 的 代码 的 顺序 来 执行 有 可能 将 他们 重 排序 实际上 对于 有些 代码 进行 重 排序 之后 虽然 对 变量 的 值 没有 造成 影响 但有 可能会 出现 线程 安全问题 if flag intretaawrite 方法 里 的 和 做了 重 排序 线程 先 对 flag 赋值 为 true 随后 执行 到 线程 ret 直接 计算出 结果 再到 线程 这时候 a 才 赋值 为 很明显 迟了 一步 关键字 本身 就 包 含了 禁止 指令 重 排序 的 语义 而 synchronized 关键字 是 由 一个 变量 在 同一 时刻 只允许 一条 线程 对 其 进行 lock 操作 这条 规则 明确 的 synchronized 关键字 同时 满足 以上 三种 特性 但是 volatile 关键字 不满足 原子 性 在 某些 情况下 volatile 的 同步 机制 的 性能 确实 要 优于 锁 使用 synchronized 关键字 或 包 里面 的 锁 因为 volatile 的 总开销 要比 锁 低 我们 判断 使用 volatile 还是 加锁 的 唯一 依据 就是 volatile 的 语义 能否 满足 使用 的 场景 原子 性 volatile 保证 被 volatile 修饰 的 共享 变量 对 所有 线程 总是 可见 的 也 就是 当 一个 线程 修 改了 一个 被 volatile 修饰 共享 变量 的 值 新 值 总是 可以 被 其他 线程 立即 得知 线程 stop dosomething 线程 stoptrue 如果 线程 改 变了 stop 的 值 线程 一 定会 停止 吗 不一 定当 线程 更 改了 stop 变量 的 值 之后 但是 还没 来得及 写入 主存 当中 线程 转 去做 其他 事情 了 那么 线程 由于 不知道 线程 对 stop 变量 的 更改 因此 还会 一直 循环 下去 禁止 指令 重 排序 优化 if flag intretaawrite 方法 里 的 和 做了 重 排序 线程 先 对 flag 赋值 为 true 随后 执行 到 线程 ret 直接 计算出 结果 再到 线程 这时候 a 才 赋值 为 很明显 迟了 一步 但是 用 volatile 修饰 之后 就 变得 不一样 了 第一 使用 volatile 关键字 会 强制 将 修改 的 值 立即 写入 主存 第二 使用 volatile 关键字 的话 当 线程 进行 修改 时会 导致 线程 的 工作 内存 中 缓存 变量 stop 的 缓存 行 无效 反映 到 硬件 层 的话 就是 cpu 的 l 或者 l 缓存 中 对应 的 缓存 行 无效 第三 由于 线程 的 工作 内存 中 缓存 变量 stop 的 缓存 行 无效 所以 线程 再次 读取 变量 stop 的 值 时 会去 主存 读取 inc 其实是 两个 步骤 先 加加 然后再 赋值 不是 原子 性 操作 所以 volatile 不能 保证 线程 安全 为 什么用 线程 池 解释 下 线程 池 参数 降低 资源 消耗 提高 线程 利用率 降低 创 建和 销毁 线程 的 消耗 提高 响应速度 任务 来了 直接 有 线程 可用 可执行 而 不是 先 创建 线程 再 执行 提高 线程 的 可管理性 线程 是 稀缺资源 使用 线程 池 可以 统一分配 调 优 监控 corepoolsize 代表 核心 线程 数 也 就是 正常 情况下 创建 工作 的 线程 数 这些 线程 创建 后 并不会 消除 而是 一种 常驻 线程 maxinumpoolsize 代表 的 是 最大 线程 数 它与 核心 线程 数 相 对应 表示 最大 允许 被 创建 的 线程 数 比如 当前任务 较多 将 核心 线程 数 都用 完了 还 无法 满足 需求 时 此时 就会 创建 新 的 线程 但是 线程 池内 线程 总数 不会 超过 最大 线程 数 表示 超出 核心 线程 数 之外 的 线程 的 空闲 存活 时间 也 就是 核心 线程 不会 消除 但是 超出 核心 线程 数 的 部分 线程 如果 空闲 一定 的 时间 则 会被 消除 我们 可以 通过 来 来 设置 空闲 时间 workqueue 用来 存放 待 执行 的 任务 假设 我们 现在 核心 线程 都 已被 使用 还有 任务 进来 则 全部 放入 队列 直到 整个 队列 被 放满 但 任务 还再 持续 进入 则会 开始 创建 新 的 线程 threadfactory 实际上 是 一个 线程 工厂 用来 生产 线程 执行任务 我们 可以 选择 使用 默认 的 创建 工厂 产生 的 线程 都在 同一个 组 内 拥有 相同 的 优先级 且 都不是 守护 线程 当然 我们 也 可以 选择 自定义 线程 工厂 一般 我们 会 根据 业务 来 制定 不同 的 线程 工厂 handler 任务 拒绝 策略 有 两种 情况 第一种 是 当 我们 调用 shutdown 等 方法 关闭 线程 池 后 这时候 即使 线程 池 内部 还有 没 执行 完 的 任务 正在 执行 但是 由于 线程 池 已经 关闭 我们 再 继续 想 线程 池 提交 任务 就会 遭到 拒绝 另一种 情况 就是 当 达到 最大 线程 数 线程 池 已经 没有 能力 继续 处理 新 提交 的 任务 时 这是 也就 拒绝 简述 线程 池 处理 流程 外 链 图片 转存 失败 源 站 可能有 防盗链 机制 建议 将 图片 保存 下来 直接 上传 imgvbwsxrxq 线程 池中 阻塞 队列 的 作用 为什么 是 先 添加 列队 而 不是 先 创建 最大 线程 一般 的 队列 只能 保证 作为 一个 有限 长度 的 缓冲区 如果 超 出了 缓冲 长度 就 无法 保留 当前 的 任务 了 阻塞 队列 通过 阻塞 可以 保留住 当前 想要 继续 入队 的 任务 阻塞 队列 可以 保证 任务 队列 中 没有 任务 时 阻塞 获取 任务 的 线程 使得 线程 进入 wait 状态 释放 cpu 资源 阻塞 队列 自带 阻塞 和 唤醒 的 功能 不需要 额外 处理 无 任务 执 行时 线程 池 利用 阻塞 队列 的 take 方法 挂起 从而 维持 核心 线程 的 存活 不至于 一直 占用 cpu 资源 在 创建 新 线程 的 时候 是 要 获取 全局 锁 的 这个 时候 其它 的 就得 阻塞 影 响了 整体 效率 就 好比 一个 企业 里面 有 个 core 正式工 的 名额 最多 招 个 正式工 要是 任务 超过 正式工 人数 taskgtcore 的 情况下 工厂 领导 线程 池 不是 首先 扩招 工人 还是 这人 但是 任务 可以 稍微 积压 一下 即 先 放到 队列 去 代 价低 个 正式工 慢慢 干 迟早会 干完 的 要是 任务 还在 继续 增加 超过 正式工 的 加班 忍耐 极限 了 队列 满了 就 的 招 外包 帮忙 了 注意 是 临时工 要是 正式工 加上 外包 还是 不能 完成任务 那 新来 的 任务 就 会被 领导 拒 绝了 线程 池 的 拒绝 策略 线程 池中 线程 复用 原理 线程 池 将 线程 和 任务 进行 解 耦 线程 是 线程 任务 是 任务 摆 脱了 之前 通过 thread 创建 线程 时 的 一个 线程 必须 对应 一个 任务 的 限制 在 线程 池中 同一个 线程 可以 从 阻塞 队列 中 不断 获取 新任务 来 执行 其 核心 原理 在于 线程 池 对 thread 进行了 封装 并不是 每次 执行任务 都会 调用 threadstart 来 创建 新 线程 而是 让 每个 线程 去 执行 一个 循环 任务 在 这个 循环 任务 中 不停 检查 是否 有 任务 需要 被执行 如果有 则 直接 执行 也 就是 调用 任务 中 的 run 方法 将 run 方法 当成 一个 普通 的 方法 执行 通过 这种 方式 只 使用 固定 的 线程 就将 所有 任务 的 run 方法 串联 起来 